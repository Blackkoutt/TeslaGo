// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TeslaGoAPI.DB.Context;

#nullable disable

namespace TeslaGoAPI.DB.Migrations
{
    [DbContext(typeof(APIContext))]
    [Migration("20250409123825_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 2,
                            RoleId = 2
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("TeslaGoAPI.DB.Entities.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<short?>("FlatNr")
                        .HasColumnType("smallint");

                    b.Property<string>("HouseNr")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("Address", t =>
                        {
                            t.HasCheckConstraint("CK_Address_FlatNr", "[FlatNr] BETWEEN 0 AND 10000");
                        });

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CityId = 1,
                            HouseNr = "0347",
                            IsDeleted = false,
                            Street = "Carretera de l'Aeroport",
                            ZipCode = "85723-0152"
                        },
                        new
                        {
                            Id = 2,
                            CityId = 1,
                            HouseNr = "581",
                            IsDeleted = false,
                            Street = "Carrer de la Riera",
                            ZipCode = "23364-9296"
                        },
                        new
                        {
                            Id = 3,
                            CityId = 2,
                            HouseNr = "111",
                            IsDeleted = false,
                            Street = "Cami de Ronda",
                            ZipCode = "56050-6987"
                        },
                        new
                        {
                            Id = 4,
                            CityId = 3,
                            HouseNr = "27106",
                            IsDeleted = false,
                            Street = "Via Portugal",
                            ZipCode = "79224"
                        },
                        new
                        {
                            Id = 5,
                            CityId = 4,
                            FlatNr = (short)67,
                            HouseNr = "8684",
                            IsDeleted = false,
                            Street = "Carrer de la Rosa",
                            ZipCode = "71963"
                        },
                        new
                        {
                            Id = 6,
                            CityId = 5,
                            FlatNr = (short)163,
                            HouseNr = "4785",
                            IsDeleted = false,
                            Street = "Carrer del Sol",
                            ZipCode = "32196-3463"
                        },
                        new
                        {
                            Id = 7,
                            CityId = 6,
                            FlatNr = (short)98,
                            HouseNr = "6877",
                            IsDeleted = false,
                            Street = "Carrer de la Ciutat",
                            ZipCode = "56356"
                        },
                        new
                        {
                            Id = 8,
                            CityId = 7,
                            FlatNr = (short)80,
                            HouseNr = "95847",
                            IsDeleted = false,
                            Street = "Carrer de la Lluna",
                            ZipCode = "29130-7888"
                        },
                        new
                        {
                            Id = 9,
                            CityId = 8,
                            FlatNr = (short)97,
                            HouseNr = "133",
                            IsDeleted = false,
                            Street = "Carrer del Mar",
                            ZipCode = "94951-3368"
                        },
                        new
                        {
                            Id = 10,
                            CityId = 9,
                            FlatNr = (short)114,
                            HouseNr = "9324",
                            IsDeleted = false,
                            Street = "Carrer de la Mediterrània",
                            ZipCode = "77650"
                        },
                        new
                        {
                            Id = 11,
                            CityId = 10,
                            FlatNr = (short)25,
                            HouseNr = "1318",
                            IsDeleted = false,
                            Street = "Carrer de la Palma",
                            ZipCode = "08769-0126"
                        },
                        new
                        {
                            Id = 12,
                            CityId = 11,
                            FlatNr = (short)97,
                            HouseNr = "690",
                            IsDeleted = false,
                            Street = "Krakowskie Przedmieście",
                            ZipCode = "79893"
                        },
                        new
                        {
                            Id = 13,
                            CityId = 12,
                            FlatNr = (short)154,
                            HouseNr = "83994",
                            IsDeleted = false,
                            Street = "Strzelecka",
                            ZipCode = "34250-4734"
                        },
                        new
                        {
                            Id = 14,
                            CityId = 13,
                            FlatNr = (short)82,
                            HouseNr = "37826",
                            IsDeleted = false,
                            Street = "Calle Gran Vía",
                            ZipCode = "14580"
                        },
                        new
                        {
                            Id = 15,
                            CityId = 14,
                            FlatNr = (short)179,
                            HouseNr = "91499",
                            IsDeleted = false,
                            Street = "Passeig de Gràcia",
                            ZipCode = "62172-8934"
                        },
                        new
                        {
                            Id = 16,
                            CityId = 15,
                            FlatNr = (short)70,
                            HouseNr = "778",
                            IsDeleted = false,
                            Street = "Berliner Strasse",
                            ZipCode = "87267"
                        },
                        new
                        {
                            Id = 17,
                            CityId = 16,
                            FlatNr = (short)145,
                            HouseNr = "1255",
                            IsDeleted = false,
                            Street = "Maximilianstrasse",
                            ZipCode = "60384"
                        },
                        new
                        {
                            Id = 18,
                            CityId = 17,
                            FlatNr = (short)81,
                            HouseNr = "370",
                            IsDeleted = false,
                            Street = "Rue Monge",
                            ZipCode = "23977-8597"
                        },
                        new
                        {
                            Id = 19,
                            CityId = 18,
                            FlatNr = (short)147,
                            HouseNr = "777",
                            IsDeleted = false,
                            Street = "Rue Vauban",
                            ZipCode = "74930"
                        },
                        new
                        {
                            Id = 20,
                            CityId = 19,
                            FlatNr = (short)118,
                            HouseNr = "93688",
                            IsDeleted = false,
                            Street = "Via Torino",
                            ZipCode = "32567-7166"
                        },
                        new
                        {
                            Id = 21,
                            CityId = 20,
                            FlatNr = (short)17,
                            HouseNr = "0036",
                            IsDeleted = false,
                            Street = "Via Brera",
                            ZipCode = "91725"
                        });
                });

            modelBuilder.Entity("TeslaGoAPI.DB.Entities.BodyType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.HasKey("Id");

                    b.ToTable("BodyType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsDeleted = false,
                            Name = "Sedan"
                        },
                        new
                        {
                            Id = 2,
                            IsDeleted = false,
                            Name = "SUV"
                        },
                        new
                        {
                            Id = 3,
                            IsDeleted = false,
                            Name = "Pickup"
                        },
                        new
                        {
                            Id = 4,
                            IsDeleted = false,
                            Name = "Roadster"
                        });
                });

            modelBuilder.Entity("TeslaGoAPI.DB.Entities.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.HasKey("Id");

                    b.ToTable("Brand");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsDeleted = false,
                            Name = "Tesla"
                        });
                });

            modelBuilder.Entity("TeslaGoAPI.DB.Entities.Car", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("ModelId")
                        .HasColumnType("int");

                    b.Property<int>("PaintId")
                        .HasColumnType("int");

                    b.Property<string>("RegistrationNr")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("VIN")
                        .IsRequired()
                        .HasMaxLength(17)
                        .HasColumnType("nvarchar(17)");

                    b.HasKey("Id");

                    b.HasIndex("ModelId");

                    b.HasIndex("PaintId");

                    b.HasIndex("RegistrationNr")
                        .IsUnique();

                    b.HasIndex("VIN")
                        .IsUnique();

                    b.ToTable("Car", t =>
                        {
                            t.HasCheckConstraint("CK_Car_VIN", "LEN([VIN]) BETWEEN 17 AND 17");
                        });

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsDeleted = false,
                            ModelId = 1,
                            PaintId = 4,
                            RegistrationNr = "ASQ 849",
                            VIN = "X08A6464VSI881156"
                        },
                        new
                        {
                            Id = 2,
                            IsDeleted = false,
                            ModelId = 1,
                            PaintId = 1,
                            RegistrationNr = "TAE 685",
                            VIN = "0T3JF9Y5RMJT13767"
                        },
                        new
                        {
                            Id = 3,
                            IsDeleted = false,
                            ModelId = 1,
                            PaintId = 7,
                            RegistrationNr = "QMQ 998",
                            VIN = "E5UMSCCMHBWN87929"
                        },
                        new
                        {
                            Id = 4,
                            IsDeleted = false,
                            ModelId = 1,
                            PaintId = 3,
                            RegistrationNr = "ARD 157",
                            VIN = "P3P23IH4MUXM95109"
                        },
                        new
                        {
                            Id = 5,
                            IsDeleted = false,
                            ModelId = 1,
                            PaintId = 6,
                            RegistrationNr = "NIU 116",
                            VIN = "F22DG6M048OJ67100"
                        },
                        new
                        {
                            Id = 6,
                            IsDeleted = false,
                            ModelId = 1,
                            PaintId = 5,
                            RegistrationNr = "DID 475",
                            VIN = "JID1MEZ4BTMU44454"
                        },
                        new
                        {
                            Id = 7,
                            IsDeleted = false,
                            ModelId = 1,
                            PaintId = 2,
                            RegistrationNr = "MIE 859",
                            VIN = "0W7ALG8JKEVO63731"
                        },
                        new
                        {
                            Id = 8,
                            IsDeleted = false,
                            ModelId = 2,
                            PaintId = 3,
                            RegistrationNr = "EPT 202",
                            VIN = "NOCDM6FF7JBF18003"
                        },
                        new
                        {
                            Id = 9,
                            IsDeleted = false,
                            ModelId = 2,
                            PaintId = 1,
                            RegistrationNr = "RXS 334",
                            VIN = "19C9P6UPLKRH65428"
                        },
                        new
                        {
                            Id = 10,
                            IsDeleted = false,
                            ModelId = 2,
                            PaintId = 3,
                            RegistrationNr = "VUD 945",
                            VIN = "EAGCKTNJH0RX14441"
                        },
                        new
                        {
                            Id = 11,
                            IsDeleted = false,
                            ModelId = 2,
                            PaintId = 3,
                            RegistrationNr = "UIR 746",
                            VIN = "CTVM2EVTTMVR80644"
                        },
                        new
                        {
                            Id = 12,
                            IsDeleted = false,
                            ModelId = 2,
                            PaintId = 6,
                            RegistrationNr = "RTA 486",
                            VIN = "87QH8GW9PLK178661"
                        },
                        new
                        {
                            Id = 13,
                            IsDeleted = false,
                            ModelId = 2,
                            PaintId = 3,
                            RegistrationNr = "NAI 158",
                            VIN = "K6OQYFMJ8MB388592"
                        },
                        new
                        {
                            Id = 14,
                            IsDeleted = false,
                            ModelId = 2,
                            PaintId = 2,
                            RegistrationNr = "ATU 121",
                            VIN = "Z7AXP3XA6KIM14904"
                        },
                        new
                        {
                            Id = 15,
                            IsDeleted = false,
                            ModelId = 3,
                            PaintId = 5,
                            RegistrationNr = "EEC 511",
                            VIN = "GSVPU61980DL24545"
                        },
                        new
                        {
                            Id = 16,
                            IsDeleted = false,
                            ModelId = 3,
                            PaintId = 7,
                            RegistrationNr = "TLT 630",
                            VIN = "WX9PAB9KG9DN11407"
                        },
                        new
                        {
                            Id = 17,
                            IsDeleted = false,
                            ModelId = 3,
                            PaintId = 1,
                            RegistrationNr = "CTU 481",
                            VIN = "QOMWT68L5WRH96460"
                        },
                        new
                        {
                            Id = 18,
                            IsDeleted = false,
                            ModelId = 3,
                            PaintId = 6,
                            RegistrationNr = "STA 277",
                            VIN = "I2JGQZCBE0NK99227"
                        },
                        new
                        {
                            Id = 19,
                            IsDeleted = false,
                            ModelId = 3,
                            PaintId = 1,
                            RegistrationNr = "SME 998",
                            VIN = "LMUH2N7S4BHA12380"
                        },
                        new
                        {
                            Id = 20,
                            IsDeleted = false,
                            ModelId = 3,
                            PaintId = 1,
                            RegistrationNr = "IEI 206",
                            VIN = "11IKLY9Q4TIG33246"
                        },
                        new
                        {
                            Id = 21,
                            IsDeleted = false,
                            ModelId = 3,
                            PaintId = 3,
                            RegistrationNr = "EEE 701",
                            VIN = "B0TWLOESKEDI20250"
                        },
                        new
                        {
                            Id = 22,
                            IsDeleted = false,
                            ModelId = 4,
                            PaintId = 5,
                            RegistrationNr = "SUI 165",
                            VIN = "1B8GXCM9W3UM82540"
                        },
                        new
                        {
                            Id = 23,
                            IsDeleted = false,
                            ModelId = 4,
                            PaintId = 1,
                            RegistrationNr = "CEU 763",
                            VIN = "KLYZXUE0TPF977823"
                        },
                        new
                        {
                            Id = 24,
                            IsDeleted = false,
                            ModelId = 4,
                            PaintId = 4,
                            RegistrationNr = "CPU 164",
                            VIN = "7YADFRC7MBG619087"
                        },
                        new
                        {
                            Id = 25,
                            IsDeleted = false,
                            ModelId = 4,
                            PaintId = 3,
                            RegistrationNr = "ETD 390",
                            VIN = "YSVW2CE3ODQD63488"
                        },
                        new
                        {
                            Id = 26,
                            IsDeleted = false,
                            ModelId = 4,
                            PaintId = 6,
                            RegistrationNr = "UIU 666",
                            VIN = "QWR61EQNZOEI52495"
                        },
                        new
                        {
                            Id = 27,
                            IsDeleted = false,
                            ModelId = 4,
                            PaintId = 7,
                            RegistrationNr = "IMU 997",
                            VIN = "G46B50VQH4PG70094"
                        },
                        new
                        {
                            Id = 28,
                            IsDeleted = false,
                            ModelId = 4,
                            PaintId = 2,
                            RegistrationNr = "LSE 910",
                            VIN = "TYCKBGUT91OF17296"
                        },
                        new
                        {
                            Id = 29,
                            IsDeleted = false,
                            ModelId = 5,
                            PaintId = 4,
                            RegistrationNr = "OMR 197",
                            VIN = "8LCNU54SN4A958159"
                        },
                        new
                        {
                            Id = 30,
                            IsDeleted = false,
                            ModelId = 5,
                            PaintId = 5,
                            RegistrationNr = "DIS 615",
                            VIN = "P7LXGUPNEKJA66726"
                        },
                        new
                        {
                            Id = 31,
                            IsDeleted = false,
                            ModelId = 5,
                            PaintId = 3,
                            RegistrationNr = "LCU 261",
                            VIN = "FV4VKLADBBZA12349"
                        },
                        new
                        {
                            Id = 32,
                            IsDeleted = false,
                            ModelId = 5,
                            PaintId = 4,
                            RegistrationNr = "IUT 473",
                            VIN = "BA6MDQV61TC930377"
                        },
                        new
                        {
                            Id = 33,
                            IsDeleted = false,
                            ModelId = 5,
                            PaintId = 5,
                            RegistrationNr = "SSO 875",
                            VIN = "PNWT5S5TC6Z788669"
                        },
                        new
                        {
                            Id = 34,
                            IsDeleted = false,
                            ModelId = 5,
                            PaintId = 4,
                            RegistrationNr = "LSU 147",
                            VIN = "RVVTKRWSKJI275062"
                        },
                        new
                        {
                            Id = 35,
                            IsDeleted = false,
                            ModelId = 5,
                            PaintId = 2,
                            RegistrationNr = "OQT 613",
                            VIN = "F7VABA1X4KAP92352"
                        },
                        new
                        {
                            Id = 36,
                            IsDeleted = false,
                            ModelId = 6,
                            PaintId = 3,
                            RegistrationNr = "EAA 374",
                            VIN = "LGHEON5OT9A251957"
                        },
                        new
                        {
                            Id = 37,
                            IsDeleted = false,
                            ModelId = 6,
                            PaintId = 4,
                            RegistrationNr = "IIS 778",
                            VIN = "75X5LMXDDVKX93169"
                        },
                        new
                        {
                            Id = 38,
                            IsDeleted = false,
                            ModelId = 6,
                            PaintId = 1,
                            RegistrationNr = "VSI 670",
                            VIN = "XYLI7XW5LMK915551"
                        },
                        new
                        {
                            Id = 39,
                            IsDeleted = false,
                            ModelId = 6,
                            PaintId = 6,
                            RegistrationNr = "DIA 821",
                            VIN = "XQHNBFQ8UUFB28935"
                        },
                        new
                        {
                            Id = 40,
                            IsDeleted = false,
                            ModelId = 6,
                            PaintId = 2,
                            RegistrationNr = "MTA 971",
                            VIN = "KY7R3FAK7FGZ68157"
                        },
                        new
                        {
                            Id = 41,
                            IsDeleted = false,
                            ModelId = 6,
                            PaintId = 5,
                            RegistrationNr = "RAU 520",
                            VIN = "Z3PO0RSYAVL826973"
                        },
                        new
                        {
                            Id = 42,
                            IsDeleted = false,
                            ModelId = 6,
                            PaintId = 1,
                            RegistrationNr = "EEQ 832",
                            VIN = "7T8700TZMZIZ32917"
                        },
                        new
                        {
                            Id = 43,
                            IsDeleted = false,
                            ModelId = 7,
                            PaintId = 7,
                            RegistrationNr = "ATM 948",
                            VIN = "9VKW8WJVEMYR61982"
                        },
                        new
                        {
                            Id = 44,
                            IsDeleted = false,
                            ModelId = 7,
                            PaintId = 5,
                            RegistrationNr = "UEQ 577",
                            VIN = "C8TP9VBSVPR091445"
                        },
                        new
                        {
                            Id = 45,
                            IsDeleted = false,
                            ModelId = 7,
                            PaintId = 6,
                            RegistrationNr = "NED 438",
                            VIN = "1XZZJ7H8Y9EP51386"
                        },
                        new
                        {
                            Id = 46,
                            IsDeleted = false,
                            ModelId = 7,
                            PaintId = 4,
                            RegistrationNr = "IDD 829",
                            VIN = "5DYA7ID783MN14884"
                        },
                        new
                        {
                            Id = 47,
                            IsDeleted = false,
                            ModelId = 7,
                            PaintId = 4,
                            RegistrationNr = "QTE 121",
                            VIN = "1GR7NHIPAJOA38247"
                        },
                        new
                        {
                            Id = 48,
                            IsDeleted = false,
                            ModelId = 7,
                            PaintId = 1,
                            RegistrationNr = "MIR 482",
                            VIN = "FIYKKBNJ1OTY24273"
                        },
                        new
                        {
                            Id = 49,
                            IsDeleted = false,
                            ModelId = 7,
                            PaintId = 4,
                            RegistrationNr = "AEM 266",
                            VIN = "HC6ZQCU3CRDY28205"
                        },
                        new
                        {
                            Id = 50,
                            IsDeleted = false,
                            ModelId = 8,
                            PaintId = 3,
                            RegistrationNr = "EMU 689",
                            VIN = "4V41C06V2LFF53928"
                        },
                        new
                        {
                            Id = 51,
                            IsDeleted = false,
                            ModelId = 8,
                            PaintId = 4,
                            RegistrationNr = "ETI 924",
                            VIN = "4Y2X6QNZ72LP57814"
                        },
                        new
                        {
                            Id = 52,
                            IsDeleted = false,
                            ModelId = 8,
                            PaintId = 6,
                            RegistrationNr = "MQL 673",
                            VIN = "V67M5ZHZXVX112964"
                        },
                        new
                        {
                            Id = 53,
                            IsDeleted = false,
                            ModelId = 8,
                            PaintId = 2,
                            RegistrationNr = "OUI 756",
                            VIN = "AA56ZB7835HL55003"
                        },
                        new
                        {
                            Id = 54,
                            IsDeleted = false,
                            ModelId = 8,
                            PaintId = 3,
                            RegistrationNr = "IED 802",
                            VIN = "Z8QJKLATBNWB46290"
                        },
                        new
                        {
                            Id = 55,
                            IsDeleted = false,
                            ModelId = 8,
                            PaintId = 2,
                            RegistrationNr = "QEM 649",
                            VIN = "XBAQ1BDIMATQ42177"
                        },
                        new
                        {
                            Id = 56,
                            IsDeleted = false,
                            ModelId = 8,
                            PaintId = 1,
                            RegistrationNr = "ATI 866",
                            VIN = "Q9W0S4PI30Q364450"
                        },
                        new
                        {
                            Id = 57,
                            IsDeleted = false,
                            ModelId = 9,
                            PaintId = 4,
                            RegistrationNr = "AAM 299",
                            VIN = "ZFUAR9J8K5QU48648"
                        },
                        new
                        {
                            Id = 58,
                            IsDeleted = false,
                            ModelId = 9,
                            PaintId = 6,
                            RegistrationNr = "RPE 918",
                            VIN = "C8FK1QBY0IPS11065"
                        },
                        new
                        {
                            Id = 59,
                            IsDeleted = false,
                            ModelId = 9,
                            PaintId = 4,
                            RegistrationNr = "QEU 468",
                            VIN = "VJNY1NDL1JX720931"
                        },
                        new
                        {
                            Id = 60,
                            IsDeleted = false,
                            ModelId = 9,
                            PaintId = 1,
                            RegistrationNr = "ATM 242",
                            VIN = "25IOLQ7UMWD494864"
                        },
                        new
                        {
                            Id = 61,
                            IsDeleted = false,
                            ModelId = 9,
                            PaintId = 6,
                            RegistrationNr = "ING 696",
                            VIN = "IMKC9EQUFZHC68623"
                        },
                        new
                        {
                            Id = 62,
                            IsDeleted = false,
                            ModelId = 9,
                            PaintId = 3,
                            RegistrationNr = "AUC 384",
                            VIN = "C2DDCZ7TGSY728201"
                        },
                        new
                        {
                            Id = 63,
                            IsDeleted = false,
                            ModelId = 9,
                            PaintId = 3,
                            RegistrationNr = "ANI 337",
                            VIN = "7Y2FZ4WTPGKD22386"
                        },
                        new
                        {
                            Id = 64,
                            IsDeleted = false,
                            ModelId = 10,
                            PaintId = 7,
                            RegistrationNr = "UBA 230",
                            VIN = "D0XX8E4RHXWC15465"
                        },
                        new
                        {
                            Id = 65,
                            IsDeleted = false,
                            ModelId = 10,
                            PaintId = 6,
                            RegistrationNr = "IIS 276",
                            VIN = "CL81QYMBB6YU97942"
                        },
                        new
                        {
                            Id = 66,
                            IsDeleted = false,
                            ModelId = 10,
                            PaintId = 2,
                            RegistrationNr = "RAD 589",
                            VIN = "F9PA7G5I7QOU41607"
                        },
                        new
                        {
                            Id = 67,
                            IsDeleted = false,
                            ModelId = 10,
                            PaintId = 3,
                            RegistrationNr = "MQO 688",
                            VIN = "BO842SCJVKT188307"
                        },
                        new
                        {
                            Id = 68,
                            IsDeleted = false,
                            ModelId = 10,
                            PaintId = 4,
                            RegistrationNr = "TRT 578",
                            VIN = "96IEB3BI6SHB71856"
                        },
                        new
                        {
                            Id = 69,
                            IsDeleted = false,
                            ModelId = 10,
                            PaintId = 7,
                            RegistrationNr = "USU 204",
                            VIN = "HM3MXA75HNZL18083"
                        },
                        new
                        {
                            Id = 70,
                            IsDeleted = false,
                            ModelId = 10,
                            PaintId = 1,
                            RegistrationNr = "ESD 237",
                            VIN = "QMA6IW88TDI911270"
                        },
                        new
                        {
                            Id = 71,
                            IsDeleted = false,
                            ModelId = 11,
                            PaintId = 2,
                            RegistrationNr = "TCD 189",
                            VIN = "3GVU8ZRHS4PH26170"
                        },
                        new
                        {
                            Id = 72,
                            IsDeleted = false,
                            ModelId = 11,
                            PaintId = 6,
                            RegistrationNr = "IIE 172",
                            VIN = "PVBZ0ITH6FRK88997"
                        },
                        new
                        {
                            Id = 73,
                            IsDeleted = false,
                            ModelId = 11,
                            PaintId = 7,
                            RegistrationNr = "NSS 358",
                            VIN = "REGEH2BVRKK157724"
                        },
                        new
                        {
                            Id = 74,
                            IsDeleted = false,
                            ModelId = 11,
                            PaintId = 6,
                            RegistrationNr = "IES 682",
                            VIN = "XLJZS4VZBGZB48463"
                        },
                        new
                        {
                            Id = 75,
                            IsDeleted = false,
                            ModelId = 11,
                            PaintId = 5,
                            RegistrationNr = "TNA 742",
                            VIN = "QY64X8UF4IFY60453"
                        },
                        new
                        {
                            Id = 76,
                            IsDeleted = false,
                            ModelId = 11,
                            PaintId = 6,
                            RegistrationNr = "SUI 149",
                            VIN = "BQB9Z6YFHRYT44877"
                        },
                        new
                        {
                            Id = 77,
                            IsDeleted = false,
                            ModelId = 11,
                            PaintId = 3,
                            RegistrationNr = "EAP 553",
                            VIN = "HSE2OU9DO5YZ85303"
                        },
                        new
                        {
                            Id = 78,
                            IsDeleted = false,
                            ModelId = 12,
                            PaintId = 1,
                            RegistrationNr = "MUA 991",
                            VIN = "V7YM8368AHDP97444"
                        },
                        new
                        {
                            Id = 79,
                            IsDeleted = false,
                            ModelId = 12,
                            PaintId = 5,
                            RegistrationNr = "ROS 713",
                            VIN = "37FC4BFT4XIZ25181"
                        },
                        new
                        {
                            Id = 80,
                            IsDeleted = false,
                            ModelId = 12,
                            PaintId = 1,
                            RegistrationNr = "ATI 207",
                            VIN = "XOM2LTCU6JSW68740"
                        },
                        new
                        {
                            Id = 81,
                            IsDeleted = false,
                            ModelId = 12,
                            PaintId = 4,
                            RegistrationNr = "ITE 789",
                            VIN = "W8RIF7FZ2BIL82780"
                        },
                        new
                        {
                            Id = 82,
                            IsDeleted = false,
                            ModelId = 12,
                            PaintId = 2,
                            RegistrationNr = "EBQ 339",
                            VIN = "KS2IY9O303T792060"
                        },
                        new
                        {
                            Id = 83,
                            IsDeleted = false,
                            ModelId = 12,
                            PaintId = 1,
                            RegistrationNr = "ADE 712",
                            VIN = "JZQS2QFGWFM098145"
                        },
                        new
                        {
                            Id = 84,
                            IsDeleted = false,
                            ModelId = 12,
                            PaintId = 2,
                            RegistrationNr = "SQE 777",
                            VIN = "UUR8U5BWO5M972998"
                        },
                        new
                        {
                            Id = 85,
                            IsDeleted = false,
                            ModelId = 13,
                            PaintId = 3,
                            RegistrationNr = "SIU 667",
                            VIN = "LI9PSL1LBTO143752"
                        },
                        new
                        {
                            Id = 86,
                            IsDeleted = false,
                            ModelId = 13,
                            PaintId = 2,
                            RegistrationNr = "ONT 871",
                            VIN = "JUB8A5F3DTTS56058"
                        },
                        new
                        {
                            Id = 87,
                            IsDeleted = false,
                            ModelId = 13,
                            PaintId = 7,
                            RegistrationNr = "QOU 480",
                            VIN = "KJZ0LQKSEZO489437"
                        },
                        new
                        {
                            Id = 88,
                            IsDeleted = false,
                            ModelId = 13,
                            PaintId = 1,
                            RegistrationNr = "CIS 347",
                            VIN = "I4VGE0PE0XJQ52837"
                        },
                        new
                        {
                            Id = 89,
                            IsDeleted = false,
                            ModelId = 13,
                            PaintId = 5,
                            RegistrationNr = "UEE 703",
                            VIN = "KKFE6EIF5MPU18875"
                        },
                        new
                        {
                            Id = 90,
                            IsDeleted = false,
                            ModelId = 13,
                            PaintId = 3,
                            RegistrationNr = "NIT 245",
                            VIN = "GG1LLZND8GBJ87728"
                        },
                        new
                        {
                            Id = 91,
                            IsDeleted = false,
                            ModelId = 13,
                            PaintId = 1,
                            RegistrationNr = "VAD 533",
                            VIN = "MLMUKZ4RP9YG22876"
                        },
                        new
                        {
                            Id = 92,
                            IsDeleted = false,
                            ModelId = 14,
                            PaintId = 4,
                            RegistrationNr = "IES 551",
                            VIN = "MLMBD480NPHI60537"
                        },
                        new
                        {
                            Id = 93,
                            IsDeleted = false,
                            ModelId = 14,
                            PaintId = 1,
                            RegistrationNr = "TAT 989",
                            VIN = "GOD0XW0XWLDG47895"
                        },
                        new
                        {
                            Id = 94,
                            IsDeleted = false,
                            ModelId = 14,
                            PaintId = 3,
                            RegistrationNr = "PTI 374",
                            VIN = "0A8B863FAXI324017"
                        },
                        new
                        {
                            Id = 95,
                            IsDeleted = false,
                            ModelId = 14,
                            PaintId = 2,
                            RegistrationNr = "IUO 477",
                            VIN = "C6SPPWJR8SQ387562"
                        },
                        new
                        {
                            Id = 96,
                            IsDeleted = false,
                            ModelId = 14,
                            PaintId = 4,
                            RegistrationNr = "SAS 757",
                            VIN = "4J4Y6Y8WI2G246705"
                        },
                        new
                        {
                            Id = 97,
                            IsDeleted = false,
                            ModelId = 14,
                            PaintId = 7,
                            RegistrationNr = "QUL 503",
                            VIN = "8V7RO4KOQSR911541"
                        },
                        new
                        {
                            Id = 98,
                            IsDeleted = false,
                            ModelId = 14,
                            PaintId = 3,
                            RegistrationNr = "BEM 860",
                            VIN = "HFMT87K1XJL497020"
                        },
                        new
                        {
                            Id = 99,
                            IsDeleted = false,
                            ModelId = 15,
                            PaintId = 3,
                            RegistrationNr = "QBA 158",
                            VIN = "DI2ULUMYYCU296533"
                        },
                        new
                        {
                            Id = 100,
                            IsDeleted = false,
                            ModelId = 15,
                            PaintId = 5,
                            RegistrationNr = "IUS 543",
                            VIN = "3E9LOY4GI1VK62095"
                        },
                        new
                        {
                            Id = 101,
                            IsDeleted = false,
                            ModelId = 15,
                            PaintId = 4,
                            RegistrationNr = "ELI 312",
                            VIN = "HETGDD8Q3LRZ92095"
                        },
                        new
                        {
                            Id = 102,
                            IsDeleted = false,
                            ModelId = 15,
                            PaintId = 7,
                            RegistrationNr = "BAS 366",
                            VIN = "KD2YAFYDAFN847985"
                        },
                        new
                        {
                            Id = 103,
                            IsDeleted = false,
                            ModelId = 15,
                            PaintId = 1,
                            RegistrationNr = "SQD 742",
                            VIN = "3CALH9DN9XXT14614"
                        },
                        new
                        {
                            Id = 104,
                            IsDeleted = false,
                            ModelId = 15,
                            PaintId = 6,
                            RegistrationNr = "MOU 709",
                            VIN = "UHS6SI581JMU26874"
                        },
                        new
                        {
                            Id = 105,
                            IsDeleted = false,
                            ModelId = 15,
                            PaintId = 5,
                            RegistrationNr = "QGI 688",
                            VIN = "LV26LV7DPYUU19820"
                        });
                });

            modelBuilder.Entity("TeslaGoAPI.DB.Entities.CarAvailabilityIssue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CarModelId")
                        .HasColumnType("int");

                    b.Property<DateTime>("IssueDetectionDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<int>("ReservationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CarModelId");

                    b.HasIndex("LocationId");

                    b.HasIndex("ReservationId");

                    b.ToTable("CarAvailabilityIssue");
                });

            modelBuilder.Entity("TeslaGoAPI.DB.Entities.CarModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("AccelerationInSeconds")
                        .HasColumnType("decimal(4, 2)");

                    b.Property<int>("BodyTypeId")
                        .HasColumnType("int");

                    b.Property<int>("BrandId")
                        .HasColumnType("int");

                    b.Property<int?>("CarModelId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<byte?>("DoorCount")
                        .HasColumnType("tinyint");

                    b.Property<int>("DriveTypeId")
                        .HasColumnType("int");

                    b.Property<int>("FuelTypeId")
                        .HasColumnType("int");

                    b.Property<int>("GearBoxId")
                        .HasColumnType("int");

                    b.Property<short?>("HorsePower")
                        .HasColumnType("smallint");

                    b.Property<string>("ImageName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<short?>("MaxSpeedInKmPerHour")
                        .HasColumnType("smallint");

                    b.Property<int>("ModelVersionId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<decimal>("PricePerDay")
                        .HasColumnType("decimal(7,2)");

                    b.Property<short?>("Range")
                        .HasColumnType("smallint");

                    b.Property<byte>("SeatCount")
                        .HasColumnType("tinyint");

                    b.Property<int?>("TrunkCapacityLiters")
                        .HasColumnType("int");

                    b.Property<int?>("TrunkCapacitySuitCases")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BodyTypeId");

                    b.HasIndex("BrandId");

                    b.HasIndex("CarModelId");

                    b.HasIndex("DriveTypeId");

                    b.HasIndex("FuelTypeId");

                    b.HasIndex("GearBoxId");

                    b.HasIndex("ModelVersionId");

                    b.ToTable("CarModel", t =>
                        {
                            t.HasCheckConstraint("CK_CarModel_AccelerationInSeconds", "[AccelerationInSeconds] BETWEEN 0 AND 1000");

                            t.HasCheckConstraint("CK_CarModel_DoorCount", "[DoorCount] BETWEEN 1 AND 30");

                            t.HasCheckConstraint("CK_CarModel_HorsePower", "[HorsePower] BETWEEN 1 AND 10000");

                            t.HasCheckConstraint("CK_CarModel_MaxSpeedInKmPerHour", "[MaxSpeedInKmPerHour] BETWEEN 1 AND 1000");

                            t.HasCheckConstraint("CK_CarModel_PricePerDay", "[PricePerDay] BETWEEN 0 AND 50000");

                            t.HasCheckConstraint("CK_CarModel_Range", "[Range] BETWEEN 0 AND 10000");

                            t.HasCheckConstraint("CK_CarModel_SeatCount", "[SeatCount] BETWEEN 1 AND 255");

                            t.HasCheckConstraint("CK_CarModel_TrunkCapacityLiters", "[TrunkCapacityLiters] BETWEEN 0 AND 10000");

                            t.HasCheckConstraint("CK_CarModel_TrunkCapacitySuitCases", "[TrunkCapacitySuitCases] BETWEEN 0 AND 50");
                        });

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccelerationInSeconds = 3.2m,
                            BodyTypeId = 1,
                            BrandId = 1,
                            DoorCount = (byte)4,
                            DriveTypeId = 1,
                            FuelTypeId = 1,
                            GearBoxId = 1,
                            HorsePower = (short)670,
                            ImageName = "tesla_model_s.png",
                            IsDeleted = false,
                            MaxSpeedInKmPerHour = (short)250,
                            ModelVersionId = 1,
                            Name = "Model S",
                            PricePerDay = 100m,
                            Range = (short)634,
                            SeatCount = (byte)5,
                            TrunkCapacityLiters = 793,
                            TrunkCapacitySuitCases = 6
                        },
                        new
                        {
                            Id = 2,
                            AccelerationInSeconds = 2.1m,
                            BodyTypeId = 1,
                            BrandId = 1,
                            DoorCount = (byte)4,
                            DriveTypeId = 1,
                            FuelTypeId = 1,
                            GearBoxId = 1,
                            HorsePower = (short)1020,
                            ImageName = "tesla_model_s.png",
                            IsDeleted = false,
                            MaxSpeedInKmPerHour = (short)322,
                            ModelVersionId = 4,
                            Name = "Model S",
                            PricePerDay = 170m,
                            Range = (short)600,
                            SeatCount = (byte)5,
                            TrunkCapacityLiters = 793,
                            TrunkCapacitySuitCases = 6
                        },
                        new
                        {
                            Id = 3,
                            AccelerationInSeconds = 6.1m,
                            BodyTypeId = 1,
                            BrandId = 1,
                            DoorCount = (byte)4,
                            DriveTypeId = 1,
                            FuelTypeId = 1,
                            GearBoxId = 1,
                            HorsePower = (short)283,
                            ImageName = "tesla_model_3.png",
                            IsDeleted = false,
                            MaxSpeedInKmPerHour = (short)225,
                            ModelVersionId = 1,
                            Name = "Model 3",
                            PricePerDay = 80m,
                            Range = (short)513,
                            SeatCount = (byte)5,
                            TrunkCapacityLiters = 682,
                            TrunkCapacitySuitCases = 5
                        },
                        new
                        {
                            Id = 4,
                            AccelerationInSeconds = 5.2m,
                            BodyTypeId = 1,
                            BrandId = 1,
                            DoorCount = (byte)4,
                            DriveTypeId = 1,
                            FuelTypeId = 1,
                            GearBoxId = 1,
                            HorsePower = (short)283,
                            ImageName = "tesla_model_3.png",
                            IsDeleted = false,
                            MaxSpeedInKmPerHour = (short)225,
                            ModelVersionId = 2,
                            Name = "Model 3",
                            PricePerDay = 100m,
                            Range = (short)702,
                            SeatCount = (byte)5,
                            TrunkCapacityLiters = 682,
                            TrunkCapacitySuitCases = 5
                        },
                        new
                        {
                            Id = 5,
                            AccelerationInSeconds = 4.4m,
                            BodyTypeId = 1,
                            BrandId = 1,
                            DoorCount = (byte)4,
                            DriveTypeId = 2,
                            FuelTypeId = 1,
                            GearBoxId = 1,
                            HorsePower = (short)346,
                            ImageName = "tesla_model_3.png",
                            IsDeleted = false,
                            MaxSpeedInKmPerHour = (short)233,
                            ModelVersionId = 2,
                            Name = "Model 3",
                            PricePerDay = 110m,
                            Range = (short)629,
                            SeatCount = (byte)5,
                            TrunkCapacityLiters = 682,
                            TrunkCapacitySuitCases = 5
                        },
                        new
                        {
                            Id = 6,
                            AccelerationInSeconds = 3.1m,
                            BodyTypeId = 1,
                            BrandId = 1,
                            DoorCount = (byte)4,
                            DriveTypeId = 2,
                            FuelTypeId = 1,
                            GearBoxId = 1,
                            HorsePower = (short)472,
                            ImageName = "tesla_model_3.png",
                            IsDeleted = false,
                            MaxSpeedInKmPerHour = (short)261,
                            ModelVersionId = 3,
                            Name = "Model 3",
                            PricePerDay = 140m,
                            Range = (short)528,
                            SeatCount = (byte)5,
                            TrunkCapacityLiters = 682,
                            TrunkCapacitySuitCases = 5
                        },
                        new
                        {
                            Id = 7,
                            AccelerationInSeconds = 6.9m,
                            BodyTypeId = 2,
                            BrandId = 1,
                            DoorCount = (byte)4,
                            DriveTypeId = 1,
                            FuelTypeId = 1,
                            GearBoxId = 1,
                            HorsePower = (short)283,
                            ImageName = "tesla_model_y.png",
                            IsDeleted = false,
                            MaxSpeedInKmPerHour = (short)217,
                            ModelVersionId = 1,
                            Name = "Model Y",
                            PricePerDay = 60m,
                            Range = (short)455,
                            SeatCount = (byte)5,
                            TrunkCapacityLiters = 2158,
                            TrunkCapacitySuitCases = 12
                        },
                        new
                        {
                            Id = 8,
                            AccelerationInSeconds = 5.9m,
                            BodyTypeId = 2,
                            BrandId = 1,
                            DoorCount = (byte)4,
                            DriveTypeId = 1,
                            FuelTypeId = 1,
                            GearBoxId = 1,
                            HorsePower = (short)283,
                            ImageName = "tesla_model_y.png",
                            IsDeleted = false,
                            MaxSpeedInKmPerHour = (short)217,
                            ModelVersionId = 2,
                            Name = "Model Y",
                            PricePerDay = 75m,
                            Range = (short)600,
                            SeatCount = (byte)5,
                            TrunkCapacityLiters = 2158,
                            TrunkCapacitySuitCases = 12
                        },
                        new
                        {
                            Id = 9,
                            AccelerationInSeconds = 5.0m,
                            BodyTypeId = 2,
                            BrandId = 1,
                            DoorCount = (byte)4,
                            DriveTypeId = 2,
                            FuelTypeId = 1,
                            GearBoxId = 1,
                            HorsePower = (short)351,
                            ImageName = "tesla_model_y.png",
                            IsDeleted = false,
                            MaxSpeedInKmPerHour = (short)217,
                            ModelVersionId = 2,
                            Name = "Model Y",
                            PricePerDay = 85m,
                            Range = (short)533,
                            SeatCount = (byte)5,
                            TrunkCapacityLiters = 2158,
                            TrunkCapacitySuitCases = 12
                        },
                        new
                        {
                            Id = 10,
                            AccelerationInSeconds = 3.7m,
                            BodyTypeId = 2,
                            BrandId = 1,
                            DoorCount = (byte)4,
                            DriveTypeId = 2,
                            FuelTypeId = 1,
                            GearBoxId = 1,
                            HorsePower = (short)456,
                            ImageName = "tesla_model_y.png",
                            IsDeleted = false,
                            MaxSpeedInKmPerHour = (short)250,
                            ModelVersionId = 3,
                            Name = "Model Y",
                            PricePerDay = 115m,
                            Range = (short)514,
                            SeatCount = (byte)5,
                            TrunkCapacityLiters = 2158,
                            TrunkCapacitySuitCases = 12
                        },
                        new
                        {
                            Id = 11,
                            AccelerationInSeconds = 3.9m,
                            BodyTypeId = 2,
                            BrandId = 1,
                            DoorCount = (byte)4,
                            DriveTypeId = 2,
                            FuelTypeId = 1,
                            GearBoxId = 1,
                            HorsePower = (short)670,
                            ImageName = "tesla_model_x.png",
                            IsDeleted = false,
                            MaxSpeedInKmPerHour = (short)250,
                            ModelVersionId = 1,
                            Name = "Model X",
                            PricePerDay = 105m,
                            Range = (short)576,
                            SeatCount = (byte)5,
                            TrunkCapacityLiters = 2614,
                            TrunkCapacitySuitCases = 14
                        },
                        new
                        {
                            Id = 12,
                            AccelerationInSeconds = 2.6m,
                            BodyTypeId = 2,
                            BrandId = 1,
                            DoorCount = (byte)4,
                            DriveTypeId = 2,
                            FuelTypeId = 1,
                            GearBoxId = 1,
                            HorsePower = (short)1020,
                            ImageName = "tesla_model_x.png",
                            IsDeleted = false,
                            MaxSpeedInKmPerHour = (short)262,
                            ModelVersionId = 4,
                            Name = "Model X",
                            PricePerDay = 145m,
                            Range = (short)543,
                            SeatCount = (byte)5,
                            TrunkCapacityLiters = 2614,
                            TrunkCapacitySuitCases = 14
                        },
                        new
                        {
                            Id = 13,
                            AccelerationInSeconds = 6.7m,
                            BodyTypeId = 3,
                            BrandId = 1,
                            DoorCount = (byte)4,
                            DriveTypeId = 1,
                            FuelTypeId = 1,
                            GearBoxId = 1,
                            HorsePower = (short)315,
                            ImageName = "tesla_cybertruck.png",
                            IsDeleted = false,
                            MaxSpeedInKmPerHour = (short)180,
                            ModelVersionId = 1,
                            Name = "Cybertruck",
                            PricePerDay = 140m,
                            Range = (short)402,
                            SeatCount = (byte)5,
                            TrunkCapacityLiters = 2830,
                            TrunkCapacitySuitCases = 16
                        },
                        new
                        {
                            Id = 14,
                            AccelerationInSeconds = 4.3m,
                            BodyTypeId = 3,
                            BrandId = 1,
                            DoorCount = (byte)4,
                            DriveTypeId = 2,
                            FuelTypeId = 1,
                            GearBoxId = 1,
                            HorsePower = (short)600,
                            ImageName = "tesla_cybertruck.png",
                            IsDeleted = false,
                            MaxSpeedInKmPerHour = (short)180,
                            ModelVersionId = 1,
                            Name = "Cybertruck",
                            PricePerDay = 170m,
                            Range = (short)547,
                            SeatCount = (byte)5,
                            TrunkCapacityLiters = 2830,
                            TrunkCapacitySuitCases = 16
                        },
                        new
                        {
                            Id = 15,
                            AccelerationInSeconds = 2.7m,
                            BodyTypeId = 3,
                            BrandId = 1,
                            DoorCount = (byte)4,
                            DriveTypeId = 2,
                            FuelTypeId = 1,
                            GearBoxId = 1,
                            HorsePower = (short)845,
                            ImageName = "tesla_cybertruck.png",
                            IsDeleted = false,
                            MaxSpeedInKmPerHour = (short)209,
                            ModelVersionId = 5,
                            Name = "Cybertruck",
                            PricePerDay = 210m,
                            Range = (short)515,
                            SeatCount = (byte)5,
                            TrunkCapacityLiters = 2830,
                            TrunkCapacitySuitCases = 16
                        });
                });

            modelBuilder.Entity("TeslaGoAPI.DB.Entities.CarModelDetails", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime?>("ProductionEndYear")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ProductionStartYear")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("CarModelDetails");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Standard Tesla Model S is an all-electric luxury sedan with impressive range and performance.",
                            ProductionStartYear = new DateTime(2012, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            Description = "Tesla Model S Plaid is a high-performance electric sedan with 1,020 horsepower, offering incredible acceleration, a top speed of 322 km/h, and a range of up to 600 km. Perfect blend of speed, luxury, and technology.",
                            ProductionStartYear = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            Description = "Tesla Model 3 is an all-electric sedan offering a perfect combination of performance, efficiency, and style. With 283 horsepower, it delivers smooth acceleration, a top speed of 225 km/h, and a range of up to 513 km. Ideal for those looking for a reliable and affordable electric vehicle.",
                            ProductionStartYear = new DateTime(2017, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            Description = "Tesla Model 3 Long Range RWD is an all-electric sedan offering great efficiency, a range of up to 590 km, and smooth acceleration with 283 horsepower. Perfect for long trips with a top speed of 225 km/h.",
                            ProductionStartYear = new DateTime(2017, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            Description = "Tesla Model 3 Long Range AWD is an all-electric sedan offering impressive performance and efficiency. With 346 horsepower, a top speed of 233 km/h, and a range of up to 580 km, it's perfect for those seeking power, range, and versatility.",
                            ProductionStartYear = new DateTime(2017, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6,
                            Description = "Tesla Model 3 Performance is an all-electric sedan offering exhilarating performance and efficiency. With 472 horsepower, a top speed of 261 km/h, and a range of up to 530 km, it's perfect for those seeking speed, power, and precision.",
                            ProductionStartYear = new DateTime(2017, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 7,
                            Description = "Tesla Model Y is an all-electric SUV offering a blend of performance and efficiency. With 283 horsepower, a top speed of 217 km/h, and a range of up to 530 km, it’s perfect for those seeking space and sustainability.",
                            ProductionStartYear = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 8,
                            Description = "Tesla Model Y Long Range RWD is an all-electric SUV offering excellent efficiency and performance. With 283 horsepower, a top speed of 217 km/h, and a range of up to 530 km, it’s perfect for long trips with ample space.",
                            ProductionStartYear = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 9,
                            Description = "Tesla Model Y Long Range AWD is an all-electric SUV offering a perfect balance of power, efficiency, and space. With 351 horsepower, a top speed of 217 km/h, and a range of up to 505 km, it’s ideal for long trips and all-weather performance.",
                            ProductionStartYear = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 10,
                            Description = "Tesla Model Y Performance is an all-electric SUV delivering exceptional speed and performance. With 456 horsepower, a top speed of 250 km/h, and a range of up to 480 km, it offers thrilling acceleration and dynamic handling.",
                            ProductionStartYear = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 11,
                            Description = "Tesla Model X is an all-electric SUV combining top-tier performance, safety, and cutting-edge technology. With 670 horsepower, a top speed of 250 km/h, and a range of up to 560 km, it offers incredible acceleration, spaciousness, and versatility.",
                            ProductionStartYear = new DateTime(2015, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 12,
                            Description = "Tesla Model X Plaid is a high-performance all-electric SUV that redefines speed and capability. With 1020 horsepower, a top speed of 262 km/h, and a range of up to 560 km, it delivers thrilling acceleration, cutting-edge technology, and unparalleled versatility for families and performance enthusiasts alike.",
                            ProductionStartYear = new DateTime(2015, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 13,
                            Description = "Tesla Cybertruck is an all-electric pickup truck that offers exceptional durability, performance, and utility. With 1020 horsepower, a top speed of 180 km/h, and a range of up to 402 km, it’s built to handle any terrain with advanced technology and futuristic design.",
                            ProductionStartYear = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 14,
                            Description = "Tesla Cybertruck is an all-electric pickup truck that offers exceptional durability, performance, and utility. With 1020 horsepower, a top speed of 180 km/h, and a range of up to 402 km, it’s built to handle any terrain with advanced technology and futuristic design.",
                            ProductionStartYear = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 15,
                            Description = "Tesla Cybertruck Cyber-beast is an all-electric pickup with unmatched performance. Equipped with three motors, it delivers extreme acceleration, a top speed of 262 km/h, and a range of up to 502 km, designed for the toughest terrains and ultimate power.",
                            ProductionStartYear = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("TeslaGoAPI.DB.Entities.CarModel_Equipment", b =>
                {
                    b.Property<int>("CarModelId")
                        .HasColumnType("int");

                    b.Property<int>("EquipmentId")
                        .HasColumnType("int");

                    b.HasKey("CarModelId", "EquipmentId");

                    b.HasIndex("EquipmentId");

                    b.ToTable("CarModel_Equipment");

                    b.HasData(
                        new
                        {
                            CarModelId = 1,
                            EquipmentId = 1
                        },
                        new
                        {
                            CarModelId = 1,
                            EquipmentId = 2
                        },
                        new
                        {
                            CarModelId = 1,
                            EquipmentId = 4
                        },
                        new
                        {
                            CarModelId = 1,
                            EquipmentId = 9
                        },
                        new
                        {
                            CarModelId = 2,
                            EquipmentId = 1
                        },
                        new
                        {
                            CarModelId = 2,
                            EquipmentId = 2
                        },
                        new
                        {
                            CarModelId = 2,
                            EquipmentId = 3
                        },
                        new
                        {
                            CarModelId = 2,
                            EquipmentId = 4
                        },
                        new
                        {
                            CarModelId = 2,
                            EquipmentId = 6
                        },
                        new
                        {
                            CarModelId = 2,
                            EquipmentId = 11
                        },
                        new
                        {
                            CarModelId = 3,
                            EquipmentId = 1
                        },
                        new
                        {
                            CarModelId = 3,
                            EquipmentId = 2
                        },
                        new
                        {
                            CarModelId = 3,
                            EquipmentId = 4
                        },
                        new
                        {
                            CarModelId = 3,
                            EquipmentId = 9
                        },
                        new
                        {
                            CarModelId = 4,
                            EquipmentId = 1
                        },
                        new
                        {
                            CarModelId = 4,
                            EquipmentId = 2
                        },
                        new
                        {
                            CarModelId = 4,
                            EquipmentId = 4
                        },
                        new
                        {
                            CarModelId = 4,
                            EquipmentId = 9
                        },
                        new
                        {
                            CarModelId = 5,
                            EquipmentId = 1
                        },
                        new
                        {
                            CarModelId = 5,
                            EquipmentId = 2
                        },
                        new
                        {
                            CarModelId = 5,
                            EquipmentId = 4
                        },
                        new
                        {
                            CarModelId = 5,
                            EquipmentId = 9
                        },
                        new
                        {
                            CarModelId = 6,
                            EquipmentId = 1
                        },
                        new
                        {
                            CarModelId = 6,
                            EquipmentId = 2
                        },
                        new
                        {
                            CarModelId = 6,
                            EquipmentId = 4
                        },
                        new
                        {
                            CarModelId = 6,
                            EquipmentId = 6
                        },
                        new
                        {
                            CarModelId = 6,
                            EquipmentId = 11
                        },
                        new
                        {
                            CarModelId = 7,
                            EquipmentId = 1
                        },
                        new
                        {
                            CarModelId = 7,
                            EquipmentId = 2
                        },
                        new
                        {
                            CarModelId = 7,
                            EquipmentId = 4
                        },
                        new
                        {
                            CarModelId = 7,
                            EquipmentId = 9
                        },
                        new
                        {
                            CarModelId = 8,
                            EquipmentId = 1
                        },
                        new
                        {
                            CarModelId = 8,
                            EquipmentId = 2
                        },
                        new
                        {
                            CarModelId = 8,
                            EquipmentId = 4
                        },
                        new
                        {
                            CarModelId = 8,
                            EquipmentId = 9
                        },
                        new
                        {
                            CarModelId = 9,
                            EquipmentId = 1
                        },
                        new
                        {
                            CarModelId = 9,
                            EquipmentId = 2
                        },
                        new
                        {
                            CarModelId = 9,
                            EquipmentId = 4
                        },
                        new
                        {
                            CarModelId = 9,
                            EquipmentId = 9
                        },
                        new
                        {
                            CarModelId = 10,
                            EquipmentId = 1
                        },
                        new
                        {
                            CarModelId = 10,
                            EquipmentId = 2
                        },
                        new
                        {
                            CarModelId = 10,
                            EquipmentId = 4
                        },
                        new
                        {
                            CarModelId = 10,
                            EquipmentId = 6
                        },
                        new
                        {
                            CarModelId = 10,
                            EquipmentId = 11
                        },
                        new
                        {
                            CarModelId = 11,
                            EquipmentId = 1
                        },
                        new
                        {
                            CarModelId = 11,
                            EquipmentId = 2
                        },
                        new
                        {
                            CarModelId = 11,
                            EquipmentId = 4
                        },
                        new
                        {
                            CarModelId = 11,
                            EquipmentId = 9
                        },
                        new
                        {
                            CarModelId = 12,
                            EquipmentId = 1
                        },
                        new
                        {
                            CarModelId = 12,
                            EquipmentId = 2
                        },
                        new
                        {
                            CarModelId = 12,
                            EquipmentId = 3
                        },
                        new
                        {
                            CarModelId = 12,
                            EquipmentId = 4
                        },
                        new
                        {
                            CarModelId = 12,
                            EquipmentId = 6
                        },
                        new
                        {
                            CarModelId = 12,
                            EquipmentId = 11
                        },
                        new
                        {
                            CarModelId = 13,
                            EquipmentId = 1
                        },
                        new
                        {
                            CarModelId = 13,
                            EquipmentId = 2
                        },
                        new
                        {
                            CarModelId = 13,
                            EquipmentId = 4
                        },
                        new
                        {
                            CarModelId = 13,
                            EquipmentId = 9
                        },
                        new
                        {
                            CarModelId = 14,
                            EquipmentId = 1
                        },
                        new
                        {
                            CarModelId = 14,
                            EquipmentId = 2
                        },
                        new
                        {
                            CarModelId = 14,
                            EquipmentId = 4
                        },
                        new
                        {
                            CarModelId = 14,
                            EquipmentId = 9
                        },
                        new
                        {
                            CarModelId = 15,
                            EquipmentId = 1
                        },
                        new
                        {
                            CarModelId = 15,
                            EquipmentId = 2
                        },
                        new
                        {
                            CarModelId = 15,
                            EquipmentId = 3
                        },
                        new
                        {
                            CarModelId = 15,
                            EquipmentId = 4
                        },
                        new
                        {
                            CarModelId = 15,
                            EquipmentId = 6
                        },
                        new
                        {
                            CarModelId = 15,
                            EquipmentId = 11
                        });
                });

            modelBuilder.Entity("TeslaGoAPI.DB.Entities.Car_Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CarId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CarId");

                    b.HasIndex("LocationId");

                    b.ToTable("Car_Location");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CarId = 1,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 2
                        },
                        new
                        {
                            Id = 2,
                            CarId = 2,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 1
                        },
                        new
                        {
                            Id = 3,
                            CarId = 3,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 4
                        },
                        new
                        {
                            Id = 4,
                            CarId = 4,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 1
                        },
                        new
                        {
                            Id = 5,
                            CarId = 5,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 2
                        },
                        new
                        {
                            Id = 6,
                            CarId = 6,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 2
                        },
                        new
                        {
                            Id = 7,
                            CarId = 7,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 3
                        },
                        new
                        {
                            Id = 8,
                            CarId = 8,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 2
                        },
                        new
                        {
                            Id = 9,
                            CarId = 9,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 1
                        },
                        new
                        {
                            Id = 10,
                            CarId = 10,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 2
                        },
                        new
                        {
                            Id = 11,
                            CarId = 11,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 4
                        },
                        new
                        {
                            Id = 12,
                            CarId = 12,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 1
                        },
                        new
                        {
                            Id = 13,
                            CarId = 13,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 4
                        },
                        new
                        {
                            Id = 14,
                            CarId = 14,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 2
                        },
                        new
                        {
                            Id = 15,
                            CarId = 15,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 3
                        },
                        new
                        {
                            Id = 16,
                            CarId = 16,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 2
                        },
                        new
                        {
                            Id = 17,
                            CarId = 17,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 3
                        },
                        new
                        {
                            Id = 18,
                            CarId = 18,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 4
                        },
                        new
                        {
                            Id = 19,
                            CarId = 19,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 1
                        },
                        new
                        {
                            Id = 20,
                            CarId = 20,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 4
                        },
                        new
                        {
                            Id = 21,
                            CarId = 21,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 1
                        },
                        new
                        {
                            Id = 22,
                            CarId = 22,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 2
                        },
                        new
                        {
                            Id = 23,
                            CarId = 23,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 2
                        },
                        new
                        {
                            Id = 24,
                            CarId = 24,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 2
                        },
                        new
                        {
                            Id = 25,
                            CarId = 25,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 3
                        },
                        new
                        {
                            Id = 26,
                            CarId = 26,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 4
                        },
                        new
                        {
                            Id = 27,
                            CarId = 27,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 3
                        },
                        new
                        {
                            Id = 28,
                            CarId = 28,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 3
                        },
                        new
                        {
                            Id = 29,
                            CarId = 29,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 4
                        },
                        new
                        {
                            Id = 30,
                            CarId = 30,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 2
                        },
                        new
                        {
                            Id = 31,
                            CarId = 31,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 3
                        },
                        new
                        {
                            Id = 32,
                            CarId = 32,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 1
                        },
                        new
                        {
                            Id = 33,
                            CarId = 33,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 1
                        },
                        new
                        {
                            Id = 34,
                            CarId = 34,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 1
                        },
                        new
                        {
                            Id = 35,
                            CarId = 35,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 4
                        },
                        new
                        {
                            Id = 36,
                            CarId = 36,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 2
                        },
                        new
                        {
                            Id = 37,
                            CarId = 37,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 3
                        },
                        new
                        {
                            Id = 38,
                            CarId = 38,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 3
                        },
                        new
                        {
                            Id = 39,
                            CarId = 39,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 3
                        },
                        new
                        {
                            Id = 40,
                            CarId = 40,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 4
                        },
                        new
                        {
                            Id = 41,
                            CarId = 41,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 1
                        },
                        new
                        {
                            Id = 42,
                            CarId = 42,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 4
                        },
                        new
                        {
                            Id = 43,
                            CarId = 43,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 2
                        },
                        new
                        {
                            Id = 44,
                            CarId = 44,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 2
                        },
                        new
                        {
                            Id = 45,
                            CarId = 45,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 3
                        },
                        new
                        {
                            Id = 46,
                            CarId = 46,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 3
                        },
                        new
                        {
                            Id = 47,
                            CarId = 47,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 2
                        },
                        new
                        {
                            Id = 48,
                            CarId = 48,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 1
                        },
                        new
                        {
                            Id = 49,
                            CarId = 49,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 3
                        },
                        new
                        {
                            Id = 50,
                            CarId = 50,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 4
                        },
                        new
                        {
                            Id = 51,
                            CarId = 51,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 4
                        },
                        new
                        {
                            Id = 52,
                            CarId = 52,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 1
                        },
                        new
                        {
                            Id = 53,
                            CarId = 53,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 3
                        },
                        new
                        {
                            Id = 54,
                            CarId = 54,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 2
                        },
                        new
                        {
                            Id = 55,
                            CarId = 55,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 4
                        },
                        new
                        {
                            Id = 56,
                            CarId = 56,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 1
                        },
                        new
                        {
                            Id = 57,
                            CarId = 57,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 1
                        },
                        new
                        {
                            Id = 58,
                            CarId = 58,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 4
                        },
                        new
                        {
                            Id = 59,
                            CarId = 59,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 4
                        },
                        new
                        {
                            Id = 60,
                            CarId = 60,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 1
                        },
                        new
                        {
                            Id = 61,
                            CarId = 61,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 1
                        },
                        new
                        {
                            Id = 62,
                            CarId = 62,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 2
                        },
                        new
                        {
                            Id = 63,
                            CarId = 63,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 3
                        },
                        new
                        {
                            Id = 64,
                            CarId = 64,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 2
                        },
                        new
                        {
                            Id = 65,
                            CarId = 65,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 3
                        },
                        new
                        {
                            Id = 66,
                            CarId = 66,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 4
                        },
                        new
                        {
                            Id = 67,
                            CarId = 67,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 1
                        },
                        new
                        {
                            Id = 68,
                            CarId = 68,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 4
                        },
                        new
                        {
                            Id = 69,
                            CarId = 69,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 4
                        },
                        new
                        {
                            Id = 70,
                            CarId = 70,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 1
                        },
                        new
                        {
                            Id = 71,
                            CarId = 71,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 3
                        },
                        new
                        {
                            Id = 72,
                            CarId = 72,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 4
                        },
                        new
                        {
                            Id = 73,
                            CarId = 73,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 3
                        },
                        new
                        {
                            Id = 74,
                            CarId = 74,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 1
                        },
                        new
                        {
                            Id = 75,
                            CarId = 75,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 2
                        },
                        new
                        {
                            Id = 76,
                            CarId = 76,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 3
                        },
                        new
                        {
                            Id = 77,
                            CarId = 77,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 1
                        },
                        new
                        {
                            Id = 78,
                            CarId = 78,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 1
                        },
                        new
                        {
                            Id = 79,
                            CarId = 79,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 3
                        },
                        new
                        {
                            Id = 80,
                            CarId = 80,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 2
                        },
                        new
                        {
                            Id = 81,
                            CarId = 81,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 1
                        },
                        new
                        {
                            Id = 82,
                            CarId = 82,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 4
                        },
                        new
                        {
                            Id = 83,
                            CarId = 83,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 2
                        },
                        new
                        {
                            Id = 84,
                            CarId = 84,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 2
                        },
                        new
                        {
                            Id = 85,
                            CarId = 85,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 2
                        },
                        new
                        {
                            Id = 86,
                            CarId = 86,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 2
                        },
                        new
                        {
                            Id = 87,
                            CarId = 87,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 1
                        },
                        new
                        {
                            Id = 88,
                            CarId = 88,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 2
                        },
                        new
                        {
                            Id = 89,
                            CarId = 89,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 3
                        },
                        new
                        {
                            Id = 90,
                            CarId = 90,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 3
                        },
                        new
                        {
                            Id = 91,
                            CarId = 91,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 1
                        },
                        new
                        {
                            Id = 92,
                            CarId = 92,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 2
                        },
                        new
                        {
                            Id = 93,
                            CarId = 93,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 4
                        },
                        new
                        {
                            Id = 94,
                            CarId = 94,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 2
                        },
                        new
                        {
                            Id = 95,
                            CarId = 95,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 3
                        },
                        new
                        {
                            Id = 96,
                            CarId = 96,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 4
                        },
                        new
                        {
                            Id = 97,
                            CarId = 97,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 1
                        },
                        new
                        {
                            Id = 98,
                            CarId = 98,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 1
                        },
                        new
                        {
                            Id = 99,
                            CarId = 99,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 2
                        },
                        new
                        {
                            Id = 100,
                            CarId = 100,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 3
                        },
                        new
                        {
                            Id = 101,
                            CarId = 101,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 1
                        },
                        new
                        {
                            Id = 102,
                            CarId = 102,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 1
                        },
                        new
                        {
                            Id = 103,
                            CarId = 103,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 2
                        },
                        new
                        {
                            Id = 104,
                            CarId = 104,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 4
                        },
                        new
                        {
                            Id = 105,
                            CarId = 105,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 4
                        });
                });

            modelBuilder.Entity("TeslaGoAPI.DB.Entities.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("City");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CountryId = 1,
                            IsDeleted = false,
                            Name = "Palma"
                        },
                        new
                        {
                            Id = 2,
                            CountryId = 1,
                            IsDeleted = false,
                            Name = "Alcudia"
                        },
                        new
                        {
                            Id = 3,
                            CountryId = 1,
                            IsDeleted = false,
                            Name = "Manacor"
                        },
                        new
                        {
                            Id = 4,
                            CountryId = 1,
                            IsDeleted = false,
                            Name = "Inca"
                        },
                        new
                        {
                            Id = 5,
                            CountryId = 1,
                            IsDeleted = false,
                            Name = "Santanyí"
                        },
                        new
                        {
                            Id = 6,
                            CountryId = 1,
                            IsDeleted = false,
                            Name = "Sóller"
                        },
                        new
                        {
                            Id = 7,
                            CountryId = 1,
                            IsDeleted = false,
                            Name = "Magaluf"
                        },
                        new
                        {
                            Id = 8,
                            CountryId = 1,
                            IsDeleted = false,
                            Name = "Porto Cristo"
                        },
                        new
                        {
                            Id = 9,
                            CountryId = 1,
                            IsDeleted = false,
                            Name = "Campos"
                        },
                        new
                        {
                            Id = 10,
                            CountryId = 1,
                            IsDeleted = false,
                            Name = "Marratxí"
                        },
                        new
                        {
                            Id = 11,
                            CountryId = 2,
                            IsDeleted = false,
                            Name = "Warsaw"
                        },
                        new
                        {
                            Id = 12,
                            CountryId = 2,
                            IsDeleted = false,
                            Name = "Kraków"
                        },
                        new
                        {
                            Id = 13,
                            CountryId = 1,
                            IsDeleted = false,
                            Name = "Madrid"
                        },
                        new
                        {
                            Id = 14,
                            CountryId = 1,
                            IsDeleted = false,
                            Name = "Barcelona"
                        },
                        new
                        {
                            Id = 15,
                            CountryId = 3,
                            IsDeleted = false,
                            Name = "Berlin"
                        },
                        new
                        {
                            Id = 16,
                            CountryId = 3,
                            IsDeleted = false,
                            Name = "Munich"
                        },
                        new
                        {
                            Id = 17,
                            CountryId = 4,
                            IsDeleted = false,
                            Name = "Paris"
                        },
                        new
                        {
                            Id = 18,
                            CountryId = 1,
                            IsDeleted = false,
                            Name = "Lyon"
                        },
                        new
                        {
                            Id = 19,
                            CountryId = 5,
                            IsDeleted = false,
                            Name = "Rome"
                        },
                        new
                        {
                            Id = 20,
                            CountryId = 5,
                            IsDeleted = false,
                            Name = "Milan"
                        });
                });

            modelBuilder.Entity("TeslaGoAPI.DB.Entities.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.HasKey("Id");

                    b.ToTable("Country");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsDeleted = false,
                            Name = "Spain"
                        },
                        new
                        {
                            Id = 2,
                            IsDeleted = false,
                            Name = "Poland"
                        },
                        new
                        {
                            Id = 3,
                            IsDeleted = false,
                            Name = "Germany"
                        },
                        new
                        {
                            Id = 4,
                            IsDeleted = false,
                            Name = "France"
                        },
                        new
                        {
                            Id = 5,
                            IsDeleted = false,
                            Name = "Italy"
                        });
                });

            modelBuilder.Entity("TeslaGoAPI.DB.Entities.DriveType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.HasKey("Id");

                    b.ToTable("DriveType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Rear-Wheel Drive",
                            IsDeleted = false,
                            Name = "RWD"
                        },
                        new
                        {
                            Id = 2,
                            Description = "All-Wheel Drive",
                            IsDeleted = false,
                            Name = "AWD"
                        });
                });

            modelBuilder.Entity("TeslaGoAPI.DB.Entities.Equipment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("Equipment");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Advanced driver assistance system with automatic lane-keeping, adaptive cruise control, and more.",
                            Name = "Autopilot"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Includes Autopilot features plus Navigate on Autopilot, Auto Park, Summon, and more.",
                            Name = "Full Self-Driving (FSD) Package"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Upgraded interior with premium audio, ambient lighting, and more luxurious finishes.",
                            Name = "Premium Interior"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Heated front and rear seats for added comfort during cold weather.",
                            Name = "Heated Seats"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Panoramic glass roof providing an open, airy feel and UV protection.",
                            Name = "Glass Roof"
                        },
                        new
                        {
                            Id = 6,
                            Description = "Access to Tesla's Supercharger network for fast charging.",
                            Name = "Supercharging"
                        },
                        new
                        {
                            Id = 7,
                            Description = "Access to premium features such as satellite maps, live traffic visualizations, and more.",
                            Name = "Premium Connectivity"
                        },
                        new
                        {
                            Id = 8,
                            Description = "Includes a tow hitch and towing accessories for hauling trailers or other gear.",
                            Name = "Towing Package"
                        },
                        new
                        {
                            Id = 9,
                            Description = "Basic 19-inch wheels",
                            Name = "19\" Wheels"
                        },
                        new
                        {
                            Id = 10,
                            Description = "Larger 20-inch wheels for better performance and appearance.",
                            Name = "20\" Wheels"
                        },
                        new
                        {
                            Id = 11,
                            Description = "Sportier 20-inch wheels for enhanced performance and aesthetics.",
                            Name = "20\" Sport Wheels"
                        },
                        new
                        {
                            Id = 12,
                            Description = "Upgraded audio system with premium sound quality.",
                            Name = "Enhanced Audio System"
                        },
                        new
                        {
                            Id = 13,
                            Description = "Ability to remotely summon your Tesla to you using the Tesla app.",
                            Name = "Smart Summon"
                        });
                });

            modelBuilder.Entity("TeslaGoAPI.DB.Entities.FuelType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.HasKey("Id");

                    b.ToTable("FuelType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsDeleted = false,
                            Name = "Electric"
                        });
                });

            modelBuilder.Entity("TeslaGoAPI.DB.Entities.GearBox", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<byte?>("NumberOfGears")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.ToTable("GearBox");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsDeleted = false,
                            Name = "Single-Speed",
                            NumberOfGears = (byte)1
                        });
                });

            modelBuilder.Entity("TeslaGoAPI.DB.Entities.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AddressId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.HasIndex("AddressId")
                        .IsUnique();

                    b.ToTable("Location");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AddressId = 1,
                            IsDeleted = false,
                            Name = "Palma Airport"
                        },
                        new
                        {
                            Id = 2,
                            AddressId = 2,
                            IsDeleted = false,
                            Name = "Palma City Center"
                        },
                        new
                        {
                            Id = 3,
                            AddressId = 3,
                            IsDeleted = false,
                            Name = "Alcudia"
                        },
                        new
                        {
                            Id = 4,
                            AddressId = 4,
                            IsDeleted = false,
                            Name = "Manacor"
                        });
                });

            modelBuilder.Entity("TeslaGoAPI.DB.Entities.ModelVersion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.HasKey("Id");

                    b.ToTable("ModelVersion");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Standard range, standard performance",
                            IsDeleted = false,
                            Name = "Standard"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Longer range, standard performance",
                            IsDeleted = false,
                            Name = "Long Range"
                        },
                        new
                        {
                            Id = 3,
                            Description = "High-performance version with quicker acceleration",
                            IsDeleted = false,
                            Name = "Performance"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Top performance with three motors and extreme acceleration",
                            IsDeleted = false,
                            Name = "Plaid"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Tri-motor performance with extreme acceleration and off-road prowess.",
                            IsDeleted = false,
                            Name = "Cyber-beast"
                        });
                });

            modelBuilder.Entity("TeslaGoAPI.DB.Entities.OptService", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(7,2)");

                    b.HasKey("Id");

                    b.ToTable("OptService", t =>
                        {
                            t.HasCheckConstraint("CK_OptService_Price", "[Price] BETWEEN 0 AND 50000");
                        });

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Comprehensive insurance coverage including damage, theft, and third-party liability.",
                            IsDeleted = false,
                            Name = "Full Insurance",
                            Price = 250.00m
                        },
                        new
                        {
                            Id = 3,
                            Description = "Safe and comfortable child car seat suitable for different age groups.",
                            IsDeleted = false,
                            Name = "Child Car Seat",
                            Price = 50.00m
                        },
                        new
                        {
                            Id = 4,
                            Description = "24/7 roadside assistance in case of emergencies like breakdowns or accidents.",
                            IsDeleted = false,
                            Name = "Roadside Assistance",
                            Price = 199.00m
                        },
                        new
                        {
                            Id = 5,
                            Description = "Add an additional driver to the rental for no extra charge for the duration of the rental period.",
                            IsDeleted = false,
                            Name = "Extra Driver",
                            Price = 25.00m
                        });
                });

            modelBuilder.Entity("TeslaGoAPI.DB.Entities.Paint", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ColorHex")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("nvarchar(7)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Paint", t =>
                        {
                            t.HasCheckConstraint("CK_Paint_ColorHex", "LEN([ColorHex]) BETWEEN 7 AND 7");
                        });

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ColorHex = "#ffffff",
                            IsDeleted = false,
                            Name = "Pearl White"
                        },
                        new
                        {
                            Id = 2,
                            ColorHex = "#000000",
                            IsDeleted = false,
                            Name = "Solid Black"
                        },
                        new
                        {
                            Id = 3,
                            ColorHex = "#235598",
                            IsDeleted = false,
                            Name = "Deep Blue Metallic"
                        },
                        new
                        {
                            Id = 4,
                            ColorHex = "#212127",
                            IsDeleted = false,
                            Name = "Stealth Grey"
                        },
                        new
                        {
                            Id = 5,
                            ColorHex = "#87858e",
                            IsDeleted = false,
                            Name = "QuickSilver"
                        },
                        new
                        {
                            Id = 6,
                            ColorHex = "#b6151f",
                            IsDeleted = false,
                            Name = "Ultra Red"
                        },
                        new
                        {
                            Id = 7,
                            ColorHex = "#740415",
                            IsDeleted = false,
                            Name = "Midnight Cherry Red"
                        });
                });

            modelBuilder.Entity("TeslaGoAPI.DB.Entities.PaymentMethod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("Id");

                    b.ToTable("PaymentMethod");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsDeleted = false,
                            Name = "Credit Card"
                        },
                        new
                        {
                            Id = 2,
                            IsDeleted = false,
                            Name = "Bank Transfer"
                        },
                        new
                        {
                            Id = 3,
                            IsDeleted = false,
                            Name = "PayPal"
                        },
                        new
                        {
                            Id = 4,
                            IsDeleted = false,
                            Name = "Apple Pay"
                        },
                        new
                        {
                            Id = 5,
                            IsDeleted = false,
                            Name = "Google Pay"
                        },
                        new
                        {
                            Id = 6,
                            IsDeleted = false,
                            Name = "Cash on Delivery"
                        });
                });

            modelBuilder.Entity("TeslaGoAPI.DB.Entities.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CarId")
                        .HasColumnType("int");

                    b.Property<int>("CarModelId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUpdated")
                        .HasColumnType("bit");

                    b.Property<int>("PaymentMethodId")
                        .HasColumnType("int");

                    b.Property<int>("PickupLocationId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReservationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ReturnLocationId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TotalCost")
                        .HasColumnType("decimal(9,2)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CarId");

                    b.HasIndex("CarModelId");

                    b.HasIndex("PaymentMethodId");

                    b.HasIndex("PickupLocationId");

                    b.HasIndex("ReturnLocationId");

                    b.HasIndex("UserId");

                    b.ToTable("Reservation", t =>
                        {
                            t.HasCheckConstraint("CK_Reservation_TotalCost", "[TotalCost] BETWEEN 0 AND 1000000");
                        });
                });

            modelBuilder.Entity("TeslaGoAPI.DB.Entities.Reservation_OptService", b =>
                {
                    b.Property<int>("OptServiceId")
                        .HasColumnType("int");

                    b.Property<int>("ReservationId")
                        .HasColumnType("int");

                    b.HasKey("OptServiceId", "ReservationId");

                    b.HasIndex("ReservationId");

                    b.ToTable("Reservation_OptService");
                });

            modelBuilder.Entity("TeslaGoAPI.DB.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Admin role",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = 2,
                            Description = "User role",
                            Name = "User",
                            NormalizedName = "USER"
                        });
                });

            modelBuilder.Entity("TeslaGoAPI.DB.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<int?>("AddressId")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("DrivingLicenseNumber")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<DateTime>("RegisteredDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("AddressId")
                        .IsUnique()
                        .HasFilter("[AddressId] IS NOT NULL");

                    b.HasIndex("DrivingLicenseNumber")
                        .IsUnique()
                        .HasFilter("[DrivingLicenseNumber] IS NOT NULL");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccessFailedCount = 0,
                            AddressId = 1,
                            ConcurrencyStamp = "37dfae4c-bb56-41e0-81a1-20a09eb89a65",
                            DateOfBirth = new DateTime(2000, 4, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DrivingLicenseNumber = "VGMI6SXX06",
                            Email = "admin@gmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            Name = "Admin",
                            NormalizedEmail = "ADMIN@GMAIL.COM",
                            NormalizedUserName = "ADMIN@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEDmA6WQMaQ9gND1pIjYf6SvO32lA21ONj0lU2g5ps+TLa2YtQTOPI1aA57hHy4F78g==",
                            PhoneNumberConfirmed = false,
                            RegisteredDate = new DateTime(2025, 1, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Surname = "Admin",
                            TwoFactorEnabled = false,
                            UserName = "admin@gmail.com"
                        },
                        new
                        {
                            Id = 2,
                            AccessFailedCount = 0,
                            AddressId = 12,
                            ConcurrencyStamp = " 9f0a42ad-8b69-4b33-b42e-87d16f84bfe5",
                            DateOfBirth = new DateTime(1985, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DrivingLicenseNumber = "QIW1VEHE53",
                            Email = "jan.kowalski@gmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            Name = "Jan",
                            NormalizedEmail = "JAN.KOWALSKI@GMAIL.COM",
                            NormalizedUserName = "JAN.KOWALSKI@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAENbBuu3Pf2gIhSRmvMfwAW8731UF/JaYYdy2RgLoAd+7We2s0IaIKMpJgffKLal+Eg==",
                            PhoneNumberConfirmed = false,
                            RegisteredDate = new DateTime(2025, 2, 23, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Surname = "Kowalski",
                            TwoFactorEnabled = false,
                            UserName = "jan.kowalski@gmail.com"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("TeslaGoAPI.DB.Entities.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("TeslaGoAPI.DB.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("TeslaGoAPI.DB.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("TeslaGoAPI.DB.Entities.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TeslaGoAPI.DB.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("TeslaGoAPI.DB.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TeslaGoAPI.DB.Entities.Address", b =>
                {
                    b.HasOne("TeslaGoAPI.DB.Entities.City", "City")
                        .WithMany("Addresses")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("TeslaGoAPI.DB.Entities.Car", b =>
                {
                    b.HasOne("TeslaGoAPI.DB.Entities.CarModel", "Model")
                        .WithMany("Cars")
                        .HasForeignKey("ModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TeslaGoAPI.DB.Entities.Paint", "Paint")
                        .WithMany("Cars")
                        .HasForeignKey("PaintId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Model");

                    b.Navigation("Paint");
                });

            modelBuilder.Entity("TeslaGoAPI.DB.Entities.CarAvailabilityIssue", b =>
                {
                    b.HasOne("TeslaGoAPI.DB.Entities.CarModel", "CarModel")
                        .WithMany("CarAvailabilityIssues")
                        .HasForeignKey("CarModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TeslaGoAPI.DB.Entities.Location", "Location")
                        .WithMany("CarAvailabilityIssues")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TeslaGoAPI.DB.Entities.Reservation", "Reservation")
                        .WithMany("CarAvailabilityIssues")
                        .HasForeignKey("ReservationId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CarModel");

                    b.Navigation("Location");

                    b.Navigation("Reservation");
                });

            modelBuilder.Entity("TeslaGoAPI.DB.Entities.CarModel", b =>
                {
                    b.HasOne("TeslaGoAPI.DB.Entities.BodyType", "BodyType")
                        .WithMany("CarModels")
                        .HasForeignKey("BodyTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TeslaGoAPI.DB.Entities.Brand", "Brand")
                        .WithMany("CarModels")
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TeslaGoAPI.DB.Entities.CarModel", null)
                        .WithMany("Reservations")
                        .HasForeignKey("CarModelId");

                    b.HasOne("TeslaGoAPI.DB.Entities.DriveType", "DriveType")
                        .WithMany("CarModels")
                        .HasForeignKey("DriveTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TeslaGoAPI.DB.Entities.FuelType", "FuelType")
                        .WithMany("CarModels")
                        .HasForeignKey("FuelTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TeslaGoAPI.DB.Entities.GearBox", "GearBox")
                        .WithMany("CarModels")
                        .HasForeignKey("GearBoxId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TeslaGoAPI.DB.Entities.ModelVersion", "ModelVersion")
                        .WithMany("CarModels")
                        .HasForeignKey("ModelVersionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BodyType");

                    b.Navigation("Brand");

                    b.Navigation("DriveType");

                    b.Navigation("FuelType");

                    b.Navigation("GearBox");

                    b.Navigation("ModelVersion");
                });

            modelBuilder.Entity("TeslaGoAPI.DB.Entities.CarModelDetails", b =>
                {
                    b.HasOne("TeslaGoAPI.DB.Entities.CarModel", "CarModel")
                        .WithOne("CarModelDetails")
                        .HasForeignKey("TeslaGoAPI.DB.Entities.CarModelDetails", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CarModel");
                });

            modelBuilder.Entity("TeslaGoAPI.DB.Entities.CarModel_Equipment", b =>
                {
                    b.HasOne("TeslaGoAPI.DB.Entities.CarModel", null)
                        .WithMany()
                        .HasForeignKey("CarModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TeslaGoAPI.DB.Entities.Equipment", null)
                        .WithMany()
                        .HasForeignKey("EquipmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TeslaGoAPI.DB.Entities.Car_Location", b =>
                {
                    b.HasOne("TeslaGoAPI.DB.Entities.Car", "Car")
                        .WithMany("Locations")
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TeslaGoAPI.DB.Entities.Location", "Location")
                        .WithMany("Cars")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Car");

                    b.Navigation("Location");
                });

            modelBuilder.Entity("TeslaGoAPI.DB.Entities.City", b =>
                {
                    b.HasOne("TeslaGoAPI.DB.Entities.Country", "Country")
                        .WithMany("Cities")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("TeslaGoAPI.DB.Entities.Location", b =>
                {
                    b.HasOne("TeslaGoAPI.DB.Entities.Address", "Address")
                        .WithOne("Location")
                        .HasForeignKey("TeslaGoAPI.DB.Entities.Location", "AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");
                });

            modelBuilder.Entity("TeslaGoAPI.DB.Entities.Reservation", b =>
                {
                    b.HasOne("TeslaGoAPI.DB.Entities.Car", "Car")
                        .WithMany("Reservations")
                        .HasForeignKey("CarId");

                    b.HasOne("TeslaGoAPI.DB.Entities.CarModel", "CarModel")
                        .WithMany()
                        .HasForeignKey("CarModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TeslaGoAPI.DB.Entities.PaymentMethod", "PaymentMethod")
                        .WithMany("Reservations")
                        .HasForeignKey("PaymentMethodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TeslaGoAPI.DB.Entities.Location", "PickupLocation")
                        .WithMany("PickupReservations")
                        .HasForeignKey("PickupLocationId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TeslaGoAPI.DB.Entities.Location", "ReturnLocation")
                        .WithMany("ReturnReservations")
                        .HasForeignKey("ReturnLocationId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TeslaGoAPI.DB.Entities.User", "User")
                        .WithMany("Reservations")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Car");

                    b.Navigation("CarModel");

                    b.Navigation("PaymentMethod");

                    b.Navigation("PickupLocation");

                    b.Navigation("ReturnLocation");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TeslaGoAPI.DB.Entities.Reservation_OptService", b =>
                {
                    b.HasOne("TeslaGoAPI.DB.Entities.OptService", null)
                        .WithMany()
                        .HasForeignKey("OptServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TeslaGoAPI.DB.Entities.Reservation", null)
                        .WithMany()
                        .HasForeignKey("ReservationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TeslaGoAPI.DB.Entities.User", b =>
                {
                    b.HasOne("TeslaGoAPI.DB.Entities.Address", "Address")
                        .WithOne("User")
                        .HasForeignKey("TeslaGoAPI.DB.Entities.User", "AddressId");

                    b.Navigation("Address");
                });

            modelBuilder.Entity("TeslaGoAPI.DB.Entities.Address", b =>
                {
                    b.Navigation("Location");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TeslaGoAPI.DB.Entities.BodyType", b =>
                {
                    b.Navigation("CarModels");
                });

            modelBuilder.Entity("TeslaGoAPI.DB.Entities.Brand", b =>
                {
                    b.Navigation("CarModels");
                });

            modelBuilder.Entity("TeslaGoAPI.DB.Entities.Car", b =>
                {
                    b.Navigation("Locations");

                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("TeslaGoAPI.DB.Entities.CarModel", b =>
                {
                    b.Navigation("CarAvailabilityIssues");

                    b.Navigation("CarModelDetails")
                        .IsRequired();

                    b.Navigation("Cars");

                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("TeslaGoAPI.DB.Entities.City", b =>
                {
                    b.Navigation("Addresses");
                });

            modelBuilder.Entity("TeslaGoAPI.DB.Entities.Country", b =>
                {
                    b.Navigation("Cities");
                });

            modelBuilder.Entity("TeslaGoAPI.DB.Entities.DriveType", b =>
                {
                    b.Navigation("CarModels");
                });

            modelBuilder.Entity("TeslaGoAPI.DB.Entities.FuelType", b =>
                {
                    b.Navigation("CarModels");
                });

            modelBuilder.Entity("TeslaGoAPI.DB.Entities.GearBox", b =>
                {
                    b.Navigation("CarModels");
                });

            modelBuilder.Entity("TeslaGoAPI.DB.Entities.Location", b =>
                {
                    b.Navigation("CarAvailabilityIssues");

                    b.Navigation("Cars");

                    b.Navigation("PickupReservations");

                    b.Navigation("ReturnReservations");
                });

            modelBuilder.Entity("TeslaGoAPI.DB.Entities.ModelVersion", b =>
                {
                    b.Navigation("CarModels");
                });

            modelBuilder.Entity("TeslaGoAPI.DB.Entities.Paint", b =>
                {
                    b.Navigation("Cars");
                });

            modelBuilder.Entity("TeslaGoAPI.DB.Entities.PaymentMethod", b =>
                {
                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("TeslaGoAPI.DB.Entities.Reservation", b =>
                {
                    b.Navigation("CarAvailabilityIssues");
                });

            modelBuilder.Entity("TeslaGoAPI.DB.Entities.User", b =>
                {
                    b.Navigation("Reservations");
                });
#pragma warning restore 612, 618
        }
    }
}
