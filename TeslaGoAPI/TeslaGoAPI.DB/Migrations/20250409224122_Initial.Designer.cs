// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TeslaGoAPI.DB.Context;

#nullable disable

namespace TeslaGoAPI.DB.Migrations
{
    [DbContext(typeof(APIContext))]
    [Migration("20250409224122_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 2,
                            RoleId = 2
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("TeslaGoAPI.DB.Entities.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CityId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<short?>("FlatNr")
                        .HasColumnType("smallint");

                    b.Property<string>("HouseNr")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Street")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("ZipCode")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("Address", t =>
                        {
                            t.HasCheckConstraint("CK_Address_FlatNr", "[FlatNr] BETWEEN 0 AND 10000");
                        });

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CityId = 1,
                            HouseNr = "21845",
                            IsDeleted = false,
                            Street = "Carretera de l'Aeroport",
                            ZipCode = "72586-0447"
                        },
                        new
                        {
                            Id = 2,
                            CityId = 1,
                            HouseNr = "435",
                            IsDeleted = false,
                            Street = "Carrer de la Riera",
                            ZipCode = "13081"
                        },
                        new
                        {
                            Id = 3,
                            CityId = 2,
                            HouseNr = "736",
                            IsDeleted = false,
                            Street = "Cami de Ronda",
                            ZipCode = "27575"
                        },
                        new
                        {
                            Id = 4,
                            CityId = 3,
                            HouseNr = "4538",
                            IsDeleted = false,
                            Street = "Via Portugal",
                            ZipCode = "67260"
                        },
                        new
                        {
                            Id = 5,
                            CityId = 4,
                            FlatNr = (short)183,
                            HouseNr = "78834",
                            IsDeleted = false,
                            Street = "Carrer de la Rosa",
                            ZipCode = "51577-0662"
                        },
                        new
                        {
                            Id = 6,
                            CityId = 5,
                            FlatNr = (short)59,
                            HouseNr = "653",
                            IsDeleted = false,
                            Street = "Carrer del Sol",
                            ZipCode = "78051"
                        },
                        new
                        {
                            Id = 7,
                            CityId = 6,
                            FlatNr = (short)173,
                            HouseNr = "079",
                            IsDeleted = false,
                            Street = "Carrer de la Ciutat",
                            ZipCode = "72785-9146"
                        },
                        new
                        {
                            Id = 8,
                            CityId = 7,
                            FlatNr = (short)33,
                            HouseNr = "3631",
                            IsDeleted = false,
                            Street = "Carrer de la Lluna",
                            ZipCode = "13228-6376"
                        },
                        new
                        {
                            Id = 9,
                            CityId = 8,
                            FlatNr = (short)24,
                            HouseNr = "6564",
                            IsDeleted = false,
                            Street = "Carrer del Mar",
                            ZipCode = "48502"
                        },
                        new
                        {
                            Id = 10,
                            CityId = 9,
                            FlatNr = (short)116,
                            HouseNr = "8679",
                            IsDeleted = false,
                            Street = "Carrer de la Mediterrània",
                            ZipCode = "63271-6608"
                        },
                        new
                        {
                            Id = 11,
                            CityId = 10,
                            FlatNr = (short)20,
                            HouseNr = "6343",
                            IsDeleted = false,
                            Street = "Carrer de la Palma",
                            ZipCode = "64918"
                        },
                        new
                        {
                            Id = 12,
                            CityId = 11,
                            FlatNr = (short)72,
                            HouseNr = "52924",
                            IsDeleted = false,
                            Street = "Krakowskie Przedmieście",
                            ZipCode = "69361"
                        },
                        new
                        {
                            Id = 13,
                            CityId = 12,
                            FlatNr = (short)190,
                            HouseNr = "771",
                            IsDeleted = false,
                            Street = "Strzelecka",
                            ZipCode = "40935"
                        },
                        new
                        {
                            Id = 14,
                            CityId = 13,
                            FlatNr = (short)9,
                            HouseNr = "2369",
                            IsDeleted = false,
                            Street = "Calle Gran Vía",
                            ZipCode = "35943-1987"
                        },
                        new
                        {
                            Id = 15,
                            CityId = 14,
                            FlatNr = (short)168,
                            HouseNr = "37171",
                            IsDeleted = false,
                            Street = "Passeig de Gràcia",
                            ZipCode = "52170-3742"
                        },
                        new
                        {
                            Id = 16,
                            CityId = 15,
                            FlatNr = (short)4,
                            HouseNr = "7317",
                            IsDeleted = false,
                            Street = "Berliner Strasse",
                            ZipCode = "67342-1120"
                        },
                        new
                        {
                            Id = 17,
                            CityId = 16,
                            FlatNr = (short)121,
                            HouseNr = "8778",
                            IsDeleted = false,
                            Street = "Maximilianstrasse",
                            ZipCode = "19951-6389"
                        },
                        new
                        {
                            Id = 18,
                            CityId = 17,
                            FlatNr = (short)94,
                            HouseNr = "42056",
                            IsDeleted = false,
                            Street = "Rue Monge",
                            ZipCode = "25748-4485"
                        },
                        new
                        {
                            Id = 19,
                            CityId = 18,
                            FlatNr = (short)179,
                            HouseNr = "65240",
                            IsDeleted = false,
                            Street = "Rue Vauban",
                            ZipCode = "32567"
                        },
                        new
                        {
                            Id = 20,
                            CityId = 19,
                            FlatNr = (short)180,
                            HouseNr = "669",
                            IsDeleted = false,
                            Street = "Via Torino",
                            ZipCode = "69283-0049"
                        },
                        new
                        {
                            Id = 21,
                            CityId = 20,
                            FlatNr = (short)187,
                            HouseNr = "960",
                            IsDeleted = false,
                            Street = "Via Brera",
                            ZipCode = "54437-2000"
                        });
                });

            modelBuilder.Entity("TeslaGoAPI.DB.Entities.BodyType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.HasKey("Id");

                    b.ToTable("BodyType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsDeleted = false,
                            Name = "Sedan"
                        },
                        new
                        {
                            Id = 2,
                            IsDeleted = false,
                            Name = "SUV"
                        },
                        new
                        {
                            Id = 3,
                            IsDeleted = false,
                            Name = "Pickup"
                        },
                        new
                        {
                            Id = 4,
                            IsDeleted = false,
                            Name = "Roadster"
                        });
                });

            modelBuilder.Entity("TeslaGoAPI.DB.Entities.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.HasKey("Id");

                    b.ToTable("Brand");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsDeleted = false,
                            Name = "Tesla"
                        });
                });

            modelBuilder.Entity("TeslaGoAPI.DB.Entities.Car", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("ModelId")
                        .HasColumnType("int");

                    b.Property<int>("PaintId")
                        .HasColumnType("int");

                    b.Property<string>("RegistrationNr")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("VIN")
                        .IsRequired()
                        .HasMaxLength(17)
                        .HasColumnType("nvarchar(17)");

                    b.HasKey("Id");

                    b.HasIndex("ModelId");

                    b.HasIndex("PaintId");

                    b.HasIndex("RegistrationNr")
                        .IsUnique();

                    b.HasIndex("VIN")
                        .IsUnique();

                    b.ToTable("Car", t =>
                        {
                            t.HasCheckConstraint("CK_Car_VIN", "LEN([VIN]) BETWEEN 17 AND 17");
                        });

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsDeleted = false,
                            ModelId = 1,
                            PaintId = 3,
                            RegistrationNr = "TUM 340",
                            VIN = "B2CCXT8PGBHC41563"
                        },
                        new
                        {
                            Id = 2,
                            IsDeleted = false,
                            ModelId = 1,
                            PaintId = 5,
                            RegistrationNr = "AMT 783",
                            VIN = "Z8YQG6HMY7OD85894"
                        },
                        new
                        {
                            Id = 3,
                            IsDeleted = false,
                            ModelId = 1,
                            PaintId = 2,
                            RegistrationNr = "DTU 232",
                            VIN = "TM5KMIEUIORD63287"
                        },
                        new
                        {
                            Id = 4,
                            IsDeleted = false,
                            ModelId = 1,
                            PaintId = 2,
                            RegistrationNr = "STI 817",
                            VIN = "B443Q9TPNTPL28528"
                        },
                        new
                        {
                            Id = 5,
                            IsDeleted = false,
                            ModelId = 1,
                            PaintId = 2,
                            RegistrationNr = "QUT 737",
                            VIN = "CJSMYJPY05S358000"
                        },
                        new
                        {
                            Id = 6,
                            IsDeleted = false,
                            ModelId = 1,
                            PaintId = 3,
                            RegistrationNr = "ICE 653",
                            VIN = "M4ZILDJZDSIY79664"
                        },
                        new
                        {
                            Id = 7,
                            IsDeleted = false,
                            ModelId = 1,
                            PaintId = 2,
                            RegistrationNr = "AUM 577",
                            VIN = "1BYC5WBZVYM030113"
                        },
                        new
                        {
                            Id = 8,
                            IsDeleted = false,
                            ModelId = 2,
                            PaintId = 6,
                            RegistrationNr = "HPN 574",
                            VIN = "YCVOEQ84EGR676731"
                        },
                        new
                        {
                            Id = 9,
                            IsDeleted = false,
                            ModelId = 2,
                            PaintId = 6,
                            RegistrationNr = "PNN 429",
                            VIN = "H169MG5GWELF50421"
                        },
                        new
                        {
                            Id = 10,
                            IsDeleted = false,
                            ModelId = 2,
                            PaintId = 2,
                            RegistrationNr = "AII 459",
                            VIN = "6MN8D85Z3CVM84922"
                        },
                        new
                        {
                            Id = 11,
                            IsDeleted = false,
                            ModelId = 2,
                            PaintId = 7,
                            RegistrationNr = "ITU 741",
                            VIN = "7YQ5OHGIU5L424242"
                        },
                        new
                        {
                            Id = 12,
                            IsDeleted = false,
                            ModelId = 2,
                            PaintId = 6,
                            RegistrationNr = "ASC 975",
                            VIN = "QKQJ3QFNYQOQ90823"
                        },
                        new
                        {
                            Id = 13,
                            IsDeleted = false,
                            ModelId = 2,
                            PaintId = 6,
                            RegistrationNr = "TNS 421",
                            VIN = "ZWDF97RWRNOZ73555"
                        },
                        new
                        {
                            Id = 14,
                            IsDeleted = false,
                            ModelId = 2,
                            PaintId = 5,
                            RegistrationNr = "NSE 751",
                            VIN = "99NK17T41FGU65579"
                        },
                        new
                        {
                            Id = 15,
                            IsDeleted = false,
                            ModelId = 3,
                            PaintId = 7,
                            RegistrationNr = "QBE 220",
                            VIN = "512EAK6ZA8OK88710"
                        },
                        new
                        {
                            Id = 16,
                            IsDeleted = false,
                            ModelId = 3,
                            PaintId = 6,
                            RegistrationNr = "UTI 799",
                            VIN = "4DTQKBFNWGIY80834"
                        },
                        new
                        {
                            Id = 17,
                            IsDeleted = false,
                            ModelId = 3,
                            PaintId = 5,
                            RegistrationNr = "PEI 498",
                            VIN = "3GN0GHUHWNZ337381"
                        },
                        new
                        {
                            Id = 18,
                            IsDeleted = false,
                            ModelId = 3,
                            PaintId = 3,
                            RegistrationNr = "FSA 790",
                            VIN = "189NEP5B4NLY96891"
                        },
                        new
                        {
                            Id = 19,
                            IsDeleted = false,
                            ModelId = 3,
                            PaintId = 4,
                            RegistrationNr = "QED 853",
                            VIN = "KREBIRYH01OY41195"
                        },
                        new
                        {
                            Id = 20,
                            IsDeleted = false,
                            ModelId = 3,
                            PaintId = 5,
                            RegistrationNr = "ECB 347",
                            VIN = "MKYJBOI943O381906"
                        },
                        new
                        {
                            Id = 21,
                            IsDeleted = false,
                            ModelId = 3,
                            PaintId = 5,
                            RegistrationNr = "TEI 335",
                            VIN = "LXYRII1I2LEO90849"
                        },
                        new
                        {
                            Id = 22,
                            IsDeleted = false,
                            ModelId = 4,
                            PaintId = 4,
                            RegistrationNr = "UUA 241",
                            VIN = "AWTK4NYV27FA64573"
                        },
                        new
                        {
                            Id = 23,
                            IsDeleted = false,
                            ModelId = 4,
                            PaintId = 3,
                            RegistrationNr = "MET 200",
                            VIN = "EZJ98WQCJGI245745"
                        },
                        new
                        {
                            Id = 24,
                            IsDeleted = false,
                            ModelId = 4,
                            PaintId = 5,
                            RegistrationNr = "EIO 955",
                            VIN = "H6UFDHH0WXKL55320"
                        },
                        new
                        {
                            Id = 25,
                            IsDeleted = false,
                            ModelId = 4,
                            PaintId = 1,
                            RegistrationNr = "OAP 364",
                            VIN = "DS7KVTVWHWUT43415"
                        },
                        new
                        {
                            Id = 26,
                            IsDeleted = false,
                            ModelId = 4,
                            PaintId = 6,
                            RegistrationNr = "MID 858",
                            VIN = "3YESLQWGZXXV41096"
                        },
                        new
                        {
                            Id = 27,
                            IsDeleted = false,
                            ModelId = 4,
                            PaintId = 3,
                            RegistrationNr = "NET 488",
                            VIN = "EDUICZ74ONKT97477"
                        },
                        new
                        {
                            Id = 28,
                            IsDeleted = false,
                            ModelId = 4,
                            PaintId = 4,
                            RegistrationNr = "IUU 508",
                            VIN = "6S4M0X15E7NE96915"
                        },
                        new
                        {
                            Id = 29,
                            IsDeleted = false,
                            ModelId = 5,
                            PaintId = 4,
                            RegistrationNr = "OEI 704",
                            VIN = "0E51T71YL8O848651"
                        },
                        new
                        {
                            Id = 30,
                            IsDeleted = false,
                            ModelId = 5,
                            PaintId = 3,
                            RegistrationNr = "VLD 999",
                            VIN = "KF58MY4FL2XY19098"
                        },
                        new
                        {
                            Id = 31,
                            IsDeleted = false,
                            ModelId = 5,
                            PaintId = 6,
                            RegistrationNr = "TTT 287",
                            VIN = "Z4PT2Y7L75GC57934"
                        },
                        new
                        {
                            Id = 32,
                            IsDeleted = false,
                            ModelId = 5,
                            PaintId = 1,
                            RegistrationNr = "MTE 852",
                            VIN = "TE8HM53HGEBW20565"
                        },
                        new
                        {
                            Id = 33,
                            IsDeleted = false,
                            ModelId = 5,
                            PaintId = 1,
                            RegistrationNr = "SIT 864",
                            VIN = "FRULLQAHKQO470257"
                        },
                        new
                        {
                            Id = 34,
                            IsDeleted = false,
                            ModelId = 5,
                            PaintId = 4,
                            RegistrationNr = "TUO 882",
                            VIN = "KS7RKSHSQ5SL51576"
                        },
                        new
                        {
                            Id = 35,
                            IsDeleted = false,
                            ModelId = 5,
                            PaintId = 6,
                            RegistrationNr = "RSE 478",
                            VIN = "OU7WJ5KS77DW14833"
                        },
                        new
                        {
                            Id = 36,
                            IsDeleted = false,
                            ModelId = 6,
                            PaintId = 1,
                            RegistrationNr = "DTR 260",
                            VIN = "QW1H6E88E3TI80450"
                        },
                        new
                        {
                            Id = 37,
                            IsDeleted = false,
                            ModelId = 6,
                            PaintId = 2,
                            RegistrationNr = "EUQ 355",
                            VIN = "12DTXNM0ZHGD38973"
                        },
                        new
                        {
                            Id = 38,
                            IsDeleted = false,
                            ModelId = 6,
                            PaintId = 3,
                            RegistrationNr = "AEN 869",
                            VIN = "0BTTTV2O8RWT55321"
                        },
                        new
                        {
                            Id = 39,
                            IsDeleted = false,
                            ModelId = 6,
                            PaintId = 7,
                            RegistrationNr = "PDU 453",
                            VIN = "Y9S1GQL3J6R762762"
                        },
                        new
                        {
                            Id = 40,
                            IsDeleted = false,
                            ModelId = 6,
                            PaintId = 5,
                            RegistrationNr = "ETO 898",
                            VIN = "1EJRNXWA13R920396"
                        },
                        new
                        {
                            Id = 41,
                            IsDeleted = false,
                            ModelId = 6,
                            PaintId = 5,
                            RegistrationNr = "OTN 730",
                            VIN = "51O78XLL25JI72229"
                        },
                        new
                        {
                            Id = 42,
                            IsDeleted = false,
                            ModelId = 6,
                            PaintId = 2,
                            RegistrationNr = "UPI 309",
                            VIN = "NF9Y882W5URY49921"
                        },
                        new
                        {
                            Id = 43,
                            IsDeleted = false,
                            ModelId = 7,
                            PaintId = 3,
                            RegistrationNr = "PAE 644",
                            VIN = "1YF2O3MF0EVG65295"
                        },
                        new
                        {
                            Id = 44,
                            IsDeleted = false,
                            ModelId = 7,
                            PaintId = 6,
                            RegistrationNr = "QTR 467",
                            VIN = "E2NPKEU3YNOR84496"
                        },
                        new
                        {
                            Id = 45,
                            IsDeleted = false,
                            ModelId = 7,
                            PaintId = 6,
                            RegistrationNr = "OIA 464",
                            VIN = "OPQ3UJ9TQKI894515"
                        },
                        new
                        {
                            Id = 46,
                            IsDeleted = false,
                            ModelId = 7,
                            PaintId = 7,
                            RegistrationNr = "EME 602",
                            VIN = "R3XPX8O7X8YJ24124"
                        },
                        new
                        {
                            Id = 47,
                            IsDeleted = false,
                            ModelId = 7,
                            PaintId = 1,
                            RegistrationNr = "RTI 491",
                            VIN = "GZZGNDYE4KKL35428"
                        },
                        new
                        {
                            Id = 48,
                            IsDeleted = false,
                            ModelId = 7,
                            PaintId = 7,
                            RegistrationNr = "TIE 820",
                            VIN = "STCQQA45YRMV58656"
                        },
                        new
                        {
                            Id = 49,
                            IsDeleted = false,
                            ModelId = 7,
                            PaintId = 4,
                            RegistrationNr = "EIQ 938",
                            VIN = "T8E1W1KQIPWE84290"
                        },
                        new
                        {
                            Id = 50,
                            IsDeleted = false,
                            ModelId = 8,
                            PaintId = 5,
                            RegistrationNr = "OAS 534",
                            VIN = "GSRYV5YG0TN718399"
                        },
                        new
                        {
                            Id = 51,
                            IsDeleted = false,
                            ModelId = 8,
                            PaintId = 7,
                            RegistrationNr = "EIC 152",
                            VIN = "3SSH2GP4HMDW25719"
                        },
                        new
                        {
                            Id = 52,
                            IsDeleted = false,
                            ModelId = 8,
                            PaintId = 7,
                            RegistrationNr = "NEI 381",
                            VIN = "04J58BMLTPZV20024"
                        },
                        new
                        {
                            Id = 53,
                            IsDeleted = false,
                            ModelId = 8,
                            PaintId = 5,
                            RegistrationNr = "QNO 907",
                            VIN = "8QQ6DHZQT9QF40087"
                        },
                        new
                        {
                            Id = 54,
                            IsDeleted = false,
                            ModelId = 8,
                            PaintId = 1,
                            RegistrationNr = "UNV 730",
                            VIN = "GVFSKY9Y44ML64994"
                        },
                        new
                        {
                            Id = 55,
                            IsDeleted = false,
                            ModelId = 8,
                            PaintId = 2,
                            RegistrationNr = "VUU 267",
                            VIN = "1H46V09OAKFB79747"
                        },
                        new
                        {
                            Id = 56,
                            IsDeleted = false,
                            ModelId = 8,
                            PaintId = 1,
                            RegistrationNr = "AIE 871",
                            VIN = "A7C4A6ABC8XW39925"
                        },
                        new
                        {
                            Id = 57,
                            IsDeleted = false,
                            ModelId = 9,
                            PaintId = 3,
                            RegistrationNr = "IPE 789",
                            VIN = "BEEV5O1390MN12191"
                        },
                        new
                        {
                            Id = 58,
                            IsDeleted = false,
                            ModelId = 9,
                            PaintId = 2,
                            RegistrationNr = "EPO 177",
                            VIN = "OHSTMS4M9OFZ59500"
                        },
                        new
                        {
                            Id = 59,
                            IsDeleted = false,
                            ModelId = 9,
                            PaintId = 4,
                            RegistrationNr = "TPE 644",
                            VIN = "PEPWLSQ6P5R548124"
                        },
                        new
                        {
                            Id = 60,
                            IsDeleted = false,
                            ModelId = 9,
                            PaintId = 5,
                            RegistrationNr = "SOP 419",
                            VIN = "AN9FQOA4L2RO28119"
                        },
                        new
                        {
                            Id = 61,
                            IsDeleted = false,
                            ModelId = 9,
                            PaintId = 3,
                            RegistrationNr = "AEN 264",
                            VIN = "OSJPN996EECY94765"
                        },
                        new
                        {
                            Id = 62,
                            IsDeleted = false,
                            ModelId = 9,
                            PaintId = 1,
                            RegistrationNr = "LAS 840",
                            VIN = "IH6K66I1M6J929385"
                        },
                        new
                        {
                            Id = 63,
                            IsDeleted = false,
                            ModelId = 9,
                            PaintId = 2,
                            RegistrationNr = "MQE 183",
                            VIN = "NTQ57WVWD4PQ37680"
                        },
                        new
                        {
                            Id = 64,
                            IsDeleted = false,
                            ModelId = 10,
                            PaintId = 2,
                            RegistrationNr = "QEA 759",
                            VIN = "WAIMRA8747LE89081"
                        },
                        new
                        {
                            Id = 65,
                            IsDeleted = false,
                            ModelId = 10,
                            PaintId = 2,
                            RegistrationNr = "QCE 953",
                            VIN = "QYUGTHYPN7MO50193"
                        },
                        new
                        {
                            Id = 66,
                            IsDeleted = false,
                            ModelId = 10,
                            PaintId = 7,
                            RegistrationNr = "IPU 187",
                            VIN = "Q4ZR7475D5KL94725"
                        },
                        new
                        {
                            Id = 67,
                            IsDeleted = false,
                            ModelId = 10,
                            PaintId = 7,
                            RegistrationNr = "AER 934",
                            VIN = "V0PMJVHNWTMI83816"
                        },
                        new
                        {
                            Id = 68,
                            IsDeleted = false,
                            ModelId = 10,
                            PaintId = 6,
                            RegistrationNr = "TCC 761",
                            VIN = "9J3D483MAHQ419907"
                        },
                        new
                        {
                            Id = 69,
                            IsDeleted = false,
                            ModelId = 10,
                            PaintId = 4,
                            RegistrationNr = "LIQ 547",
                            VIN = "AMKYJHKHKCSH23129"
                        },
                        new
                        {
                            Id = 70,
                            IsDeleted = false,
                            ModelId = 10,
                            PaintId = 2,
                            RegistrationNr = "OME 740",
                            VIN = "JUKW3GAWHYKN31500"
                        },
                        new
                        {
                            Id = 71,
                            IsDeleted = false,
                            ModelId = 11,
                            PaintId = 2,
                            RegistrationNr = "QQR 561",
                            VIN = "GMI3V46ZFJI340380"
                        },
                        new
                        {
                            Id = 72,
                            IsDeleted = false,
                            ModelId = 11,
                            PaintId = 1,
                            RegistrationNr = "SUS 368",
                            VIN = "HBEVHIXWBCUT82445"
                        },
                        new
                        {
                            Id = 73,
                            IsDeleted = false,
                            ModelId = 11,
                            PaintId = 4,
                            RegistrationNr = "SON 927",
                            VIN = "LE9OVQ18BCC856427"
                        },
                        new
                        {
                            Id = 74,
                            IsDeleted = false,
                            ModelId = 11,
                            PaintId = 2,
                            RegistrationNr = "EUL 570",
                            VIN = "R6NVQQOLTRXF90567"
                        },
                        new
                        {
                            Id = 75,
                            IsDeleted = false,
                            ModelId = 11,
                            PaintId = 1,
                            RegistrationNr = "UCI 565",
                            VIN = "OJH5X2R42TU954933"
                        },
                        new
                        {
                            Id = 76,
                            IsDeleted = false,
                            ModelId = 11,
                            PaintId = 3,
                            RegistrationNr = "QMU 950",
                            VIN = "6GWFQ1BPIRU127945"
                        },
                        new
                        {
                            Id = 77,
                            IsDeleted = false,
                            ModelId = 11,
                            PaintId = 7,
                            RegistrationNr = "SIV 819",
                            VIN = "QIWYECZK42M975891"
                        },
                        new
                        {
                            Id = 78,
                            IsDeleted = false,
                            ModelId = 12,
                            PaintId = 5,
                            RegistrationNr = "AAU 800",
                            VIN = "WFNHBXPW8JMY97239"
                        },
                        new
                        {
                            Id = 79,
                            IsDeleted = false,
                            ModelId = 12,
                            PaintId = 4,
                            RegistrationNr = "TSV 997",
                            VIN = "9UXWNFQ0N0MY88938"
                        },
                        new
                        {
                            Id = 80,
                            IsDeleted = false,
                            ModelId = 12,
                            PaintId = 3,
                            RegistrationNr = "IAI 117",
                            VIN = "EK3DBA0LZFNE50516"
                        },
                        new
                        {
                            Id = 81,
                            IsDeleted = false,
                            ModelId = 12,
                            PaintId = 4,
                            RegistrationNr = "SAS 325",
                            VIN = "515N6RS5MFCD32584"
                        },
                        new
                        {
                            Id = 82,
                            IsDeleted = false,
                            ModelId = 12,
                            PaintId = 5,
                            RegistrationNr = "QNQ 501",
                            VIN = "DHWSLMLRW8DM24115"
                        },
                        new
                        {
                            Id = 83,
                            IsDeleted = false,
                            ModelId = 12,
                            PaintId = 1,
                            RegistrationNr = "IVQ 685",
                            VIN = "PAUU2XL3M3V847695"
                        },
                        new
                        {
                            Id = 84,
                            IsDeleted = false,
                            ModelId = 12,
                            PaintId = 1,
                            RegistrationNr = "TIN 535",
                            VIN = "WRHA2RWBQDLD51455"
                        },
                        new
                        {
                            Id = 85,
                            IsDeleted = false,
                            ModelId = 13,
                            PaintId = 5,
                            RegistrationNr = "HAH 186",
                            VIN = "QDQV61YNIZBL99580"
                        },
                        new
                        {
                            Id = 86,
                            IsDeleted = false,
                            ModelId = 13,
                            PaintId = 2,
                            RegistrationNr = "SEI 524",
                            VIN = "SI43DAUF5OCT54838"
                        },
                        new
                        {
                            Id = 87,
                            IsDeleted = false,
                            ModelId = 13,
                            PaintId = 1,
                            RegistrationNr = "NFL 760",
                            VIN = "O2C650HV97V710149"
                        },
                        new
                        {
                            Id = 88,
                            IsDeleted = false,
                            ModelId = 13,
                            PaintId = 5,
                            RegistrationNr = "IQA 816",
                            VIN = "1Q9H17L6ZHIQ92469"
                        },
                        new
                        {
                            Id = 89,
                            IsDeleted = false,
                            ModelId = 13,
                            PaintId = 3,
                            RegistrationNr = "OMT 215",
                            VIN = "CDIH0PBWXJIH50602"
                        },
                        new
                        {
                            Id = 90,
                            IsDeleted = false,
                            ModelId = 13,
                            PaintId = 3,
                            RegistrationNr = "VUI 170",
                            VIN = "SFUOYMEV8EDA75393"
                        },
                        new
                        {
                            Id = 91,
                            IsDeleted = false,
                            ModelId = 13,
                            PaintId = 1,
                            RegistrationNr = "UNM 758",
                            VIN = "HNCNW0BC07CF57979"
                        },
                        new
                        {
                            Id = 92,
                            IsDeleted = false,
                            ModelId = 14,
                            PaintId = 6,
                            RegistrationNr = "LST 686",
                            VIN = "VS6OLRQ1M2LA22005"
                        },
                        new
                        {
                            Id = 93,
                            IsDeleted = false,
                            ModelId = 14,
                            PaintId = 5,
                            RegistrationNr = "BPT 858",
                            VIN = "8GZPPKA5SGGY98390"
                        },
                        new
                        {
                            Id = 94,
                            IsDeleted = false,
                            ModelId = 14,
                            PaintId = 6,
                            RegistrationNr = "QAE 367",
                            VIN = "W0HJW9XVPAMT30502"
                        },
                        new
                        {
                            Id = 95,
                            IsDeleted = false,
                            ModelId = 14,
                            PaintId = 5,
                            RegistrationNr = "IEV 179",
                            VIN = "W1UTIXE5SQAW79977"
                        },
                        new
                        {
                            Id = 96,
                            IsDeleted = false,
                            ModelId = 14,
                            PaintId = 6,
                            RegistrationNr = "EBE 722",
                            VIN = "ZE674B21WOJD92891"
                        },
                        new
                        {
                            Id = 97,
                            IsDeleted = false,
                            ModelId = 14,
                            PaintId = 7,
                            RegistrationNr = "ELQ 101",
                            VIN = "FHTZKP7LPKOE66167"
                        },
                        new
                        {
                            Id = 98,
                            IsDeleted = false,
                            ModelId = 14,
                            PaintId = 3,
                            RegistrationNr = "AIU 209",
                            VIN = "1SIMJK9KGZKB79447"
                        },
                        new
                        {
                            Id = 99,
                            IsDeleted = false,
                            ModelId = 15,
                            PaintId = 5,
                            RegistrationNr = "MAT 560",
                            VIN = "PIM3L6JJH3IE26931"
                        },
                        new
                        {
                            Id = 100,
                            IsDeleted = false,
                            ModelId = 15,
                            PaintId = 6,
                            RegistrationNr = "AET 632",
                            VIN = "7VIJ056FY6AI58930"
                        },
                        new
                        {
                            Id = 101,
                            IsDeleted = false,
                            ModelId = 15,
                            PaintId = 1,
                            RegistrationNr = "OTA 584",
                            VIN = "VZNY3IZUBUYW26053"
                        },
                        new
                        {
                            Id = 102,
                            IsDeleted = false,
                            ModelId = 15,
                            PaintId = 4,
                            RegistrationNr = "BQU 159",
                            VIN = "KW4AAPD04BI755628"
                        },
                        new
                        {
                            Id = 103,
                            IsDeleted = false,
                            ModelId = 15,
                            PaintId = 5,
                            RegistrationNr = "TXS 327",
                            VIN = "4AQ1Z1VVQ8H328953"
                        },
                        new
                        {
                            Id = 104,
                            IsDeleted = false,
                            ModelId = 15,
                            PaintId = 1,
                            RegistrationNr = "IIM 891",
                            VIN = "4SSK4YAIAQBJ90202"
                        },
                        new
                        {
                            Id = 105,
                            IsDeleted = false,
                            ModelId = 15,
                            PaintId = 1,
                            RegistrationNr = "TTA 356",
                            VIN = "BNLQOKL40DNC78016"
                        });
                });

            modelBuilder.Entity("TeslaGoAPI.DB.Entities.CarAvailabilityIssue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CarModelId")
                        .HasColumnType("int");

                    b.Property<DateTime>("IssueDetectionDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<int>("ReservationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CarModelId");

                    b.HasIndex("LocationId");

                    b.HasIndex("ReservationId");

                    b.ToTable("CarAvailabilityIssue");
                });

            modelBuilder.Entity("TeslaGoAPI.DB.Entities.CarModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("AccelerationInSeconds")
                        .HasColumnType("decimal(4, 2)");

                    b.Property<int>("BodyTypeId")
                        .HasColumnType("int");

                    b.Property<int>("BrandId")
                        .HasColumnType("int");

                    b.Property<int?>("CarModelId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<byte?>("DoorCount")
                        .HasColumnType("tinyint");

                    b.Property<int>("DriveTypeId")
                        .HasColumnType("int");

                    b.Property<int>("FuelTypeId")
                        .HasColumnType("int");

                    b.Property<int>("GearBoxId")
                        .HasColumnType("int");

                    b.Property<short?>("HorsePower")
                        .HasColumnType("smallint");

                    b.Property<string>("ImageName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<short?>("MaxSpeedInKmPerHour")
                        .HasColumnType("smallint");

                    b.Property<int>("ModelVersionId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<decimal>("PricePerDay")
                        .HasColumnType("decimal(7,2)");

                    b.Property<short?>("Range")
                        .HasColumnType("smallint");

                    b.Property<byte>("SeatCount")
                        .HasColumnType("tinyint");

                    b.Property<int?>("TrunkCapacityLiters")
                        .HasColumnType("int");

                    b.Property<int?>("TrunkCapacitySuitCases")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BodyTypeId");

                    b.HasIndex("BrandId");

                    b.HasIndex("CarModelId");

                    b.HasIndex("DriveTypeId");

                    b.HasIndex("FuelTypeId");

                    b.HasIndex("GearBoxId");

                    b.HasIndex("ModelVersionId");

                    b.ToTable("CarModel", t =>
                        {
                            t.HasCheckConstraint("CK_CarModel_AccelerationInSeconds", "[AccelerationInSeconds] BETWEEN 0 AND 1000");

                            t.HasCheckConstraint("CK_CarModel_DoorCount", "[DoorCount] BETWEEN 1 AND 30");

                            t.HasCheckConstraint("CK_CarModel_HorsePower", "[HorsePower] BETWEEN 1 AND 10000");

                            t.HasCheckConstraint("CK_CarModel_MaxSpeedInKmPerHour", "[MaxSpeedInKmPerHour] BETWEEN 1 AND 1000");

                            t.HasCheckConstraint("CK_CarModel_PricePerDay", "[PricePerDay] BETWEEN 0 AND 50000");

                            t.HasCheckConstraint("CK_CarModel_Range", "[Range] BETWEEN 0 AND 10000");

                            t.HasCheckConstraint("CK_CarModel_SeatCount", "[SeatCount] BETWEEN 1 AND 255");

                            t.HasCheckConstraint("CK_CarModel_TrunkCapacityLiters", "[TrunkCapacityLiters] BETWEEN 0 AND 10000");

                            t.HasCheckConstraint("CK_CarModel_TrunkCapacitySuitCases", "[TrunkCapacitySuitCases] BETWEEN 0 AND 50");
                        });

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccelerationInSeconds = 3.2m,
                            BodyTypeId = 1,
                            BrandId = 1,
                            DoorCount = (byte)4,
                            DriveTypeId = 1,
                            FuelTypeId = 1,
                            GearBoxId = 1,
                            HorsePower = (short)670,
                            ImageName = "tesla_model_s.png",
                            IsDeleted = false,
                            MaxSpeedInKmPerHour = (short)250,
                            ModelVersionId = 1,
                            Name = "Model S",
                            PricePerDay = 100m,
                            Range = (short)634,
                            SeatCount = (byte)5,
                            TrunkCapacityLiters = 793,
                            TrunkCapacitySuitCases = 6
                        },
                        new
                        {
                            Id = 2,
                            AccelerationInSeconds = 2.1m,
                            BodyTypeId = 1,
                            BrandId = 1,
                            DoorCount = (byte)4,
                            DriveTypeId = 1,
                            FuelTypeId = 1,
                            GearBoxId = 1,
                            HorsePower = (short)1020,
                            ImageName = "tesla_model_s.png",
                            IsDeleted = false,
                            MaxSpeedInKmPerHour = (short)322,
                            ModelVersionId = 4,
                            Name = "Model S",
                            PricePerDay = 170m,
                            Range = (short)600,
                            SeatCount = (byte)5,
                            TrunkCapacityLiters = 793,
                            TrunkCapacitySuitCases = 6
                        },
                        new
                        {
                            Id = 3,
                            AccelerationInSeconds = 6.1m,
                            BodyTypeId = 1,
                            BrandId = 1,
                            DoorCount = (byte)4,
                            DriveTypeId = 1,
                            FuelTypeId = 1,
                            GearBoxId = 1,
                            HorsePower = (short)283,
                            ImageName = "tesla_model_3.png",
                            IsDeleted = false,
                            MaxSpeedInKmPerHour = (short)225,
                            ModelVersionId = 1,
                            Name = "Model 3",
                            PricePerDay = 80m,
                            Range = (short)513,
                            SeatCount = (byte)5,
                            TrunkCapacityLiters = 682,
                            TrunkCapacitySuitCases = 5
                        },
                        new
                        {
                            Id = 4,
                            AccelerationInSeconds = 5.2m,
                            BodyTypeId = 1,
                            BrandId = 1,
                            DoorCount = (byte)4,
                            DriveTypeId = 1,
                            FuelTypeId = 1,
                            GearBoxId = 1,
                            HorsePower = (short)283,
                            ImageName = "tesla_model_3.png",
                            IsDeleted = false,
                            MaxSpeedInKmPerHour = (short)225,
                            ModelVersionId = 2,
                            Name = "Model 3",
                            PricePerDay = 100m,
                            Range = (short)702,
                            SeatCount = (byte)5,
                            TrunkCapacityLiters = 682,
                            TrunkCapacitySuitCases = 5
                        },
                        new
                        {
                            Id = 5,
                            AccelerationInSeconds = 4.4m,
                            BodyTypeId = 1,
                            BrandId = 1,
                            DoorCount = (byte)4,
                            DriveTypeId = 2,
                            FuelTypeId = 1,
                            GearBoxId = 1,
                            HorsePower = (short)346,
                            ImageName = "tesla_model_3.png",
                            IsDeleted = false,
                            MaxSpeedInKmPerHour = (short)233,
                            ModelVersionId = 2,
                            Name = "Model 3",
                            PricePerDay = 110m,
                            Range = (short)629,
                            SeatCount = (byte)5,
                            TrunkCapacityLiters = 682,
                            TrunkCapacitySuitCases = 5
                        },
                        new
                        {
                            Id = 6,
                            AccelerationInSeconds = 3.1m,
                            BodyTypeId = 1,
                            BrandId = 1,
                            DoorCount = (byte)4,
                            DriveTypeId = 2,
                            FuelTypeId = 1,
                            GearBoxId = 1,
                            HorsePower = (short)472,
                            ImageName = "tesla_model_3.png",
                            IsDeleted = false,
                            MaxSpeedInKmPerHour = (short)261,
                            ModelVersionId = 3,
                            Name = "Model 3",
                            PricePerDay = 140m,
                            Range = (short)528,
                            SeatCount = (byte)5,
                            TrunkCapacityLiters = 682,
                            TrunkCapacitySuitCases = 5
                        },
                        new
                        {
                            Id = 7,
                            AccelerationInSeconds = 6.9m,
                            BodyTypeId = 2,
                            BrandId = 1,
                            DoorCount = (byte)4,
                            DriveTypeId = 1,
                            FuelTypeId = 1,
                            GearBoxId = 1,
                            HorsePower = (short)283,
                            ImageName = "tesla_model_y.png",
                            IsDeleted = false,
                            MaxSpeedInKmPerHour = (short)217,
                            ModelVersionId = 1,
                            Name = "Model Y",
                            PricePerDay = 60m,
                            Range = (short)455,
                            SeatCount = (byte)5,
                            TrunkCapacityLiters = 2158,
                            TrunkCapacitySuitCases = 12
                        },
                        new
                        {
                            Id = 8,
                            AccelerationInSeconds = 5.9m,
                            BodyTypeId = 2,
                            BrandId = 1,
                            DoorCount = (byte)4,
                            DriveTypeId = 1,
                            FuelTypeId = 1,
                            GearBoxId = 1,
                            HorsePower = (short)283,
                            ImageName = "tesla_model_y.png",
                            IsDeleted = false,
                            MaxSpeedInKmPerHour = (short)217,
                            ModelVersionId = 2,
                            Name = "Model Y",
                            PricePerDay = 75m,
                            Range = (short)600,
                            SeatCount = (byte)5,
                            TrunkCapacityLiters = 2158,
                            TrunkCapacitySuitCases = 12
                        },
                        new
                        {
                            Id = 9,
                            AccelerationInSeconds = 5.0m,
                            BodyTypeId = 2,
                            BrandId = 1,
                            DoorCount = (byte)4,
                            DriveTypeId = 2,
                            FuelTypeId = 1,
                            GearBoxId = 1,
                            HorsePower = (short)351,
                            ImageName = "tesla_model_y.png",
                            IsDeleted = false,
                            MaxSpeedInKmPerHour = (short)217,
                            ModelVersionId = 2,
                            Name = "Model Y",
                            PricePerDay = 85m,
                            Range = (short)533,
                            SeatCount = (byte)5,
                            TrunkCapacityLiters = 2158,
                            TrunkCapacitySuitCases = 12
                        },
                        new
                        {
                            Id = 10,
                            AccelerationInSeconds = 3.7m,
                            BodyTypeId = 2,
                            BrandId = 1,
                            DoorCount = (byte)4,
                            DriveTypeId = 2,
                            FuelTypeId = 1,
                            GearBoxId = 1,
                            HorsePower = (short)456,
                            ImageName = "tesla_model_y.png",
                            IsDeleted = false,
                            MaxSpeedInKmPerHour = (short)250,
                            ModelVersionId = 3,
                            Name = "Model Y",
                            PricePerDay = 115m,
                            Range = (short)514,
                            SeatCount = (byte)5,
                            TrunkCapacityLiters = 2158,
                            TrunkCapacitySuitCases = 12
                        },
                        new
                        {
                            Id = 11,
                            AccelerationInSeconds = 3.9m,
                            BodyTypeId = 2,
                            BrandId = 1,
                            DoorCount = (byte)4,
                            DriveTypeId = 2,
                            FuelTypeId = 1,
                            GearBoxId = 1,
                            HorsePower = (short)670,
                            ImageName = "tesla_model_x.png",
                            IsDeleted = false,
                            MaxSpeedInKmPerHour = (short)250,
                            ModelVersionId = 1,
                            Name = "Model X",
                            PricePerDay = 105m,
                            Range = (short)576,
                            SeatCount = (byte)5,
                            TrunkCapacityLiters = 2614,
                            TrunkCapacitySuitCases = 14
                        },
                        new
                        {
                            Id = 12,
                            AccelerationInSeconds = 2.6m,
                            BodyTypeId = 2,
                            BrandId = 1,
                            DoorCount = (byte)4,
                            DriveTypeId = 2,
                            FuelTypeId = 1,
                            GearBoxId = 1,
                            HorsePower = (short)1020,
                            ImageName = "tesla_model_x.png",
                            IsDeleted = false,
                            MaxSpeedInKmPerHour = (short)262,
                            ModelVersionId = 4,
                            Name = "Model X",
                            PricePerDay = 145m,
                            Range = (short)543,
                            SeatCount = (byte)5,
                            TrunkCapacityLiters = 2614,
                            TrunkCapacitySuitCases = 14
                        },
                        new
                        {
                            Id = 13,
                            AccelerationInSeconds = 6.7m,
                            BodyTypeId = 3,
                            BrandId = 1,
                            DoorCount = (byte)4,
                            DriveTypeId = 1,
                            FuelTypeId = 1,
                            GearBoxId = 1,
                            HorsePower = (short)315,
                            ImageName = "tesla_cybertruck.png",
                            IsDeleted = false,
                            MaxSpeedInKmPerHour = (short)180,
                            ModelVersionId = 1,
                            Name = "Cybertruck",
                            PricePerDay = 140m,
                            Range = (short)402,
                            SeatCount = (byte)5,
                            TrunkCapacityLiters = 2830,
                            TrunkCapacitySuitCases = 16
                        },
                        new
                        {
                            Id = 14,
                            AccelerationInSeconds = 4.3m,
                            BodyTypeId = 3,
                            BrandId = 1,
                            DoorCount = (byte)4,
                            DriveTypeId = 2,
                            FuelTypeId = 1,
                            GearBoxId = 1,
                            HorsePower = (short)600,
                            ImageName = "tesla_cybertruck.png",
                            IsDeleted = false,
                            MaxSpeedInKmPerHour = (short)180,
                            ModelVersionId = 1,
                            Name = "Cybertruck",
                            PricePerDay = 170m,
                            Range = (short)547,
                            SeatCount = (byte)5,
                            TrunkCapacityLiters = 2830,
                            TrunkCapacitySuitCases = 16
                        },
                        new
                        {
                            Id = 15,
                            AccelerationInSeconds = 2.7m,
                            BodyTypeId = 3,
                            BrandId = 1,
                            DoorCount = (byte)4,
                            DriveTypeId = 2,
                            FuelTypeId = 1,
                            GearBoxId = 1,
                            HorsePower = (short)845,
                            ImageName = "tesla_cybertruck.png",
                            IsDeleted = false,
                            MaxSpeedInKmPerHour = (short)209,
                            ModelVersionId = 5,
                            Name = "Cybertruck",
                            PricePerDay = 210m,
                            Range = (short)515,
                            SeatCount = (byte)5,
                            TrunkCapacityLiters = 2830,
                            TrunkCapacitySuitCases = 16
                        });
                });

            modelBuilder.Entity("TeslaGoAPI.DB.Entities.CarModelDetails", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime?>("ProductionEndYear")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ProductionStartYear")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("CarModelDetails");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Standard Tesla Model S is an all-electric luxury sedan with impressive range and performance.",
                            ProductionStartYear = new DateTime(2012, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            Description = "Tesla Model S Plaid is a high-performance electric sedan with 1,020 horsepower, offering incredible acceleration, a top speed of 322 km/h, and a range of up to 600 km. Perfect blend of speed, luxury, and technology.",
                            ProductionStartYear = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            Description = "Tesla Model 3 is an all-electric sedan offering a perfect combination of performance, efficiency, and style. With 283 horsepower, it delivers smooth acceleration, a top speed of 225 km/h, and a range of up to 513 km. Ideal for those looking for a reliable and affordable electric vehicle.",
                            ProductionStartYear = new DateTime(2017, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            Description = "Tesla Model 3 Long Range RWD is an all-electric sedan offering great efficiency, a range of up to 590 km, and smooth acceleration with 283 horsepower. Perfect for long trips with a top speed of 225 km/h.",
                            ProductionStartYear = new DateTime(2017, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            Description = "Tesla Model 3 Long Range AWD is an all-electric sedan offering impressive performance and efficiency. With 346 horsepower, a top speed of 233 km/h, and a range of up to 580 km, it's perfect for those seeking power, range, and versatility.",
                            ProductionStartYear = new DateTime(2017, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6,
                            Description = "Tesla Model 3 Performance is an all-electric sedan offering exhilarating performance and efficiency. With 472 horsepower, a top speed of 261 km/h, and a range of up to 530 km, it's perfect for those seeking speed, power, and precision.",
                            ProductionStartYear = new DateTime(2017, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 7,
                            Description = "Tesla Model Y is an all-electric SUV offering a blend of performance and efficiency. With 283 horsepower, a top speed of 217 km/h, and a range of up to 530 km, it’s perfect for those seeking space and sustainability.",
                            ProductionStartYear = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 8,
                            Description = "Tesla Model Y Long Range RWD is an all-electric SUV offering excellent efficiency and performance. With 283 horsepower, a top speed of 217 km/h, and a range of up to 530 km, it’s perfect for long trips with ample space.",
                            ProductionStartYear = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 9,
                            Description = "Tesla Model Y Long Range AWD is an all-electric SUV offering a perfect balance of power, efficiency, and space. With 351 horsepower, a top speed of 217 km/h, and a range of up to 505 km, it’s ideal for long trips and all-weather performance.",
                            ProductionStartYear = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 10,
                            Description = "Tesla Model Y Performance is an all-electric SUV delivering exceptional speed and performance. With 456 horsepower, a top speed of 250 km/h, and a range of up to 480 km, it offers thrilling acceleration and dynamic handling.",
                            ProductionStartYear = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 11,
                            Description = "Tesla Model X is an all-electric SUV combining top-tier performance, safety, and cutting-edge technology. With 670 horsepower, a top speed of 250 km/h, and a range of up to 560 km, it offers incredible acceleration, spaciousness, and versatility.",
                            ProductionStartYear = new DateTime(2015, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 12,
                            Description = "Tesla Model X Plaid is a high-performance all-electric SUV that redefines speed and capability. With 1020 horsepower, a top speed of 262 km/h, and a range of up to 560 km, it delivers thrilling acceleration, cutting-edge technology, and unparalleled versatility for families and performance enthusiasts alike.",
                            ProductionStartYear = new DateTime(2015, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 13,
                            Description = "Tesla Cybertruck is an all-electric pickup truck that offers exceptional durability, performance, and utility. With 1020 horsepower, a top speed of 180 km/h, and a range of up to 402 km, it’s built to handle any terrain with advanced technology and futuristic design.",
                            ProductionStartYear = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 14,
                            Description = "Tesla Cybertruck is an all-electric pickup truck that offers exceptional durability, performance, and utility. With 1020 horsepower, a top speed of 180 km/h, and a range of up to 402 km, it’s built to handle any terrain with advanced technology and futuristic design.",
                            ProductionStartYear = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 15,
                            Description = "Tesla Cybertruck Cyber-beast is an all-electric pickup with unmatched performance. Equipped with three motors, it delivers extreme acceleration, a top speed of 262 km/h, and a range of up to 502 km, designed for the toughest terrains and ultimate power.",
                            ProductionStartYear = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("TeslaGoAPI.DB.Entities.CarModel_Equipment", b =>
                {
                    b.Property<int>("CarModelId")
                        .HasColumnType("int");

                    b.Property<int>("EquipmentId")
                        .HasColumnType("int");

                    b.HasKey("CarModelId", "EquipmentId");

                    b.HasIndex("EquipmentId");

                    b.ToTable("CarModel_Equipment");

                    b.HasData(
                        new
                        {
                            CarModelId = 1,
                            EquipmentId = 1
                        },
                        new
                        {
                            CarModelId = 1,
                            EquipmentId = 2
                        },
                        new
                        {
                            CarModelId = 1,
                            EquipmentId = 4
                        },
                        new
                        {
                            CarModelId = 1,
                            EquipmentId = 9
                        },
                        new
                        {
                            CarModelId = 2,
                            EquipmentId = 1
                        },
                        new
                        {
                            CarModelId = 2,
                            EquipmentId = 2
                        },
                        new
                        {
                            CarModelId = 2,
                            EquipmentId = 3
                        },
                        new
                        {
                            CarModelId = 2,
                            EquipmentId = 4
                        },
                        new
                        {
                            CarModelId = 2,
                            EquipmentId = 6
                        },
                        new
                        {
                            CarModelId = 2,
                            EquipmentId = 11
                        },
                        new
                        {
                            CarModelId = 3,
                            EquipmentId = 1
                        },
                        new
                        {
                            CarModelId = 3,
                            EquipmentId = 2
                        },
                        new
                        {
                            CarModelId = 3,
                            EquipmentId = 4
                        },
                        new
                        {
                            CarModelId = 3,
                            EquipmentId = 9
                        },
                        new
                        {
                            CarModelId = 4,
                            EquipmentId = 1
                        },
                        new
                        {
                            CarModelId = 4,
                            EquipmentId = 2
                        },
                        new
                        {
                            CarModelId = 4,
                            EquipmentId = 4
                        },
                        new
                        {
                            CarModelId = 4,
                            EquipmentId = 9
                        },
                        new
                        {
                            CarModelId = 5,
                            EquipmentId = 1
                        },
                        new
                        {
                            CarModelId = 5,
                            EquipmentId = 2
                        },
                        new
                        {
                            CarModelId = 5,
                            EquipmentId = 4
                        },
                        new
                        {
                            CarModelId = 5,
                            EquipmentId = 9
                        },
                        new
                        {
                            CarModelId = 6,
                            EquipmentId = 1
                        },
                        new
                        {
                            CarModelId = 6,
                            EquipmentId = 2
                        },
                        new
                        {
                            CarModelId = 6,
                            EquipmentId = 4
                        },
                        new
                        {
                            CarModelId = 6,
                            EquipmentId = 6
                        },
                        new
                        {
                            CarModelId = 6,
                            EquipmentId = 11
                        },
                        new
                        {
                            CarModelId = 7,
                            EquipmentId = 1
                        },
                        new
                        {
                            CarModelId = 7,
                            EquipmentId = 2
                        },
                        new
                        {
                            CarModelId = 7,
                            EquipmentId = 4
                        },
                        new
                        {
                            CarModelId = 7,
                            EquipmentId = 9
                        },
                        new
                        {
                            CarModelId = 8,
                            EquipmentId = 1
                        },
                        new
                        {
                            CarModelId = 8,
                            EquipmentId = 2
                        },
                        new
                        {
                            CarModelId = 8,
                            EquipmentId = 4
                        },
                        new
                        {
                            CarModelId = 8,
                            EquipmentId = 9
                        },
                        new
                        {
                            CarModelId = 9,
                            EquipmentId = 1
                        },
                        new
                        {
                            CarModelId = 9,
                            EquipmentId = 2
                        },
                        new
                        {
                            CarModelId = 9,
                            EquipmentId = 4
                        },
                        new
                        {
                            CarModelId = 9,
                            EquipmentId = 9
                        },
                        new
                        {
                            CarModelId = 10,
                            EquipmentId = 1
                        },
                        new
                        {
                            CarModelId = 10,
                            EquipmentId = 2
                        },
                        new
                        {
                            CarModelId = 10,
                            EquipmentId = 4
                        },
                        new
                        {
                            CarModelId = 10,
                            EquipmentId = 6
                        },
                        new
                        {
                            CarModelId = 10,
                            EquipmentId = 11
                        },
                        new
                        {
                            CarModelId = 11,
                            EquipmentId = 1
                        },
                        new
                        {
                            CarModelId = 11,
                            EquipmentId = 2
                        },
                        new
                        {
                            CarModelId = 11,
                            EquipmentId = 4
                        },
                        new
                        {
                            CarModelId = 11,
                            EquipmentId = 9
                        },
                        new
                        {
                            CarModelId = 12,
                            EquipmentId = 1
                        },
                        new
                        {
                            CarModelId = 12,
                            EquipmentId = 2
                        },
                        new
                        {
                            CarModelId = 12,
                            EquipmentId = 3
                        },
                        new
                        {
                            CarModelId = 12,
                            EquipmentId = 4
                        },
                        new
                        {
                            CarModelId = 12,
                            EquipmentId = 6
                        },
                        new
                        {
                            CarModelId = 12,
                            EquipmentId = 11
                        },
                        new
                        {
                            CarModelId = 13,
                            EquipmentId = 1
                        },
                        new
                        {
                            CarModelId = 13,
                            EquipmentId = 2
                        },
                        new
                        {
                            CarModelId = 13,
                            EquipmentId = 4
                        },
                        new
                        {
                            CarModelId = 13,
                            EquipmentId = 9
                        },
                        new
                        {
                            CarModelId = 14,
                            EquipmentId = 1
                        },
                        new
                        {
                            CarModelId = 14,
                            EquipmentId = 2
                        },
                        new
                        {
                            CarModelId = 14,
                            EquipmentId = 4
                        },
                        new
                        {
                            CarModelId = 14,
                            EquipmentId = 9
                        },
                        new
                        {
                            CarModelId = 15,
                            EquipmentId = 1
                        },
                        new
                        {
                            CarModelId = 15,
                            EquipmentId = 2
                        },
                        new
                        {
                            CarModelId = 15,
                            EquipmentId = 3
                        },
                        new
                        {
                            CarModelId = 15,
                            EquipmentId = 4
                        },
                        new
                        {
                            CarModelId = 15,
                            EquipmentId = 6
                        },
                        new
                        {
                            CarModelId = 15,
                            EquipmentId = 11
                        });
                });

            modelBuilder.Entity("TeslaGoAPI.DB.Entities.Car_Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CarId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CarId");

                    b.HasIndex("LocationId");

                    b.ToTable("Car_Location");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CarId = 1,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 2
                        },
                        new
                        {
                            Id = 2,
                            CarId = 2,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 3
                        },
                        new
                        {
                            Id = 3,
                            CarId = 3,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 2
                        },
                        new
                        {
                            Id = 4,
                            CarId = 4,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 3
                        },
                        new
                        {
                            Id = 5,
                            CarId = 5,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 2
                        },
                        new
                        {
                            Id = 6,
                            CarId = 6,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 4
                        },
                        new
                        {
                            Id = 7,
                            CarId = 7,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 3
                        },
                        new
                        {
                            Id = 8,
                            CarId = 8,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 1
                        },
                        new
                        {
                            Id = 9,
                            CarId = 9,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 1
                        },
                        new
                        {
                            Id = 10,
                            CarId = 10,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 3
                        },
                        new
                        {
                            Id = 11,
                            CarId = 11,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 2
                        },
                        new
                        {
                            Id = 12,
                            CarId = 12,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 3
                        },
                        new
                        {
                            Id = 13,
                            CarId = 13,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 2
                        },
                        new
                        {
                            Id = 14,
                            CarId = 14,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 4
                        },
                        new
                        {
                            Id = 15,
                            CarId = 15,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 2
                        },
                        new
                        {
                            Id = 16,
                            CarId = 16,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 4
                        },
                        new
                        {
                            Id = 17,
                            CarId = 17,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 1
                        },
                        new
                        {
                            Id = 18,
                            CarId = 18,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 2
                        },
                        new
                        {
                            Id = 19,
                            CarId = 19,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 2
                        },
                        new
                        {
                            Id = 20,
                            CarId = 20,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 3
                        },
                        new
                        {
                            Id = 21,
                            CarId = 21,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 4
                        },
                        new
                        {
                            Id = 22,
                            CarId = 22,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 3
                        },
                        new
                        {
                            Id = 23,
                            CarId = 23,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 1
                        },
                        new
                        {
                            Id = 24,
                            CarId = 24,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 2
                        },
                        new
                        {
                            Id = 25,
                            CarId = 25,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 3
                        },
                        new
                        {
                            Id = 26,
                            CarId = 26,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 2
                        },
                        new
                        {
                            Id = 27,
                            CarId = 27,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 2
                        },
                        new
                        {
                            Id = 28,
                            CarId = 28,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 3
                        },
                        new
                        {
                            Id = 29,
                            CarId = 29,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 2
                        },
                        new
                        {
                            Id = 30,
                            CarId = 30,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 1
                        },
                        new
                        {
                            Id = 31,
                            CarId = 31,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 3
                        },
                        new
                        {
                            Id = 32,
                            CarId = 32,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 2
                        },
                        new
                        {
                            Id = 33,
                            CarId = 33,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 1
                        },
                        new
                        {
                            Id = 34,
                            CarId = 34,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 1
                        },
                        new
                        {
                            Id = 35,
                            CarId = 35,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 3
                        },
                        new
                        {
                            Id = 36,
                            CarId = 36,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 1
                        },
                        new
                        {
                            Id = 37,
                            CarId = 37,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 4
                        },
                        new
                        {
                            Id = 38,
                            CarId = 38,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 2
                        },
                        new
                        {
                            Id = 39,
                            CarId = 39,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 3
                        },
                        new
                        {
                            Id = 40,
                            CarId = 40,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 1
                        },
                        new
                        {
                            Id = 41,
                            CarId = 41,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 4
                        },
                        new
                        {
                            Id = 42,
                            CarId = 42,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 4
                        },
                        new
                        {
                            Id = 43,
                            CarId = 43,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 3
                        },
                        new
                        {
                            Id = 44,
                            CarId = 44,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 1
                        },
                        new
                        {
                            Id = 45,
                            CarId = 45,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 1
                        },
                        new
                        {
                            Id = 46,
                            CarId = 46,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 2
                        },
                        new
                        {
                            Id = 47,
                            CarId = 47,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 3
                        },
                        new
                        {
                            Id = 48,
                            CarId = 48,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 4
                        },
                        new
                        {
                            Id = 49,
                            CarId = 49,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 2
                        },
                        new
                        {
                            Id = 50,
                            CarId = 50,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 3
                        },
                        new
                        {
                            Id = 51,
                            CarId = 51,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 2
                        },
                        new
                        {
                            Id = 52,
                            CarId = 52,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 4
                        },
                        new
                        {
                            Id = 53,
                            CarId = 53,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 2
                        },
                        new
                        {
                            Id = 54,
                            CarId = 54,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 4
                        },
                        new
                        {
                            Id = 55,
                            CarId = 55,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 2
                        },
                        new
                        {
                            Id = 56,
                            CarId = 56,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 4
                        },
                        new
                        {
                            Id = 57,
                            CarId = 57,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 4
                        },
                        new
                        {
                            Id = 58,
                            CarId = 58,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 4
                        },
                        new
                        {
                            Id = 59,
                            CarId = 59,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 4
                        },
                        new
                        {
                            Id = 60,
                            CarId = 60,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 4
                        },
                        new
                        {
                            Id = 61,
                            CarId = 61,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 3
                        },
                        new
                        {
                            Id = 62,
                            CarId = 62,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 2
                        },
                        new
                        {
                            Id = 63,
                            CarId = 63,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 3
                        },
                        new
                        {
                            Id = 64,
                            CarId = 64,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 4
                        },
                        new
                        {
                            Id = 65,
                            CarId = 65,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 1
                        },
                        new
                        {
                            Id = 66,
                            CarId = 66,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 1
                        },
                        new
                        {
                            Id = 67,
                            CarId = 67,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 3
                        },
                        new
                        {
                            Id = 68,
                            CarId = 68,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 1
                        },
                        new
                        {
                            Id = 69,
                            CarId = 69,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 3
                        },
                        new
                        {
                            Id = 70,
                            CarId = 70,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 4
                        },
                        new
                        {
                            Id = 71,
                            CarId = 71,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 2
                        },
                        new
                        {
                            Id = 72,
                            CarId = 72,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 2
                        },
                        new
                        {
                            Id = 73,
                            CarId = 73,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 2
                        },
                        new
                        {
                            Id = 74,
                            CarId = 74,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 3
                        },
                        new
                        {
                            Id = 75,
                            CarId = 75,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 4
                        },
                        new
                        {
                            Id = 76,
                            CarId = 76,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 1
                        },
                        new
                        {
                            Id = 77,
                            CarId = 77,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 4
                        },
                        new
                        {
                            Id = 78,
                            CarId = 78,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 4
                        },
                        new
                        {
                            Id = 79,
                            CarId = 79,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 4
                        },
                        new
                        {
                            Id = 80,
                            CarId = 80,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 4
                        },
                        new
                        {
                            Id = 81,
                            CarId = 81,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 2
                        },
                        new
                        {
                            Id = 82,
                            CarId = 82,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 3
                        },
                        new
                        {
                            Id = 83,
                            CarId = 83,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 4
                        },
                        new
                        {
                            Id = 84,
                            CarId = 84,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 4
                        },
                        new
                        {
                            Id = 85,
                            CarId = 85,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 3
                        },
                        new
                        {
                            Id = 86,
                            CarId = 86,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 1
                        },
                        new
                        {
                            Id = 87,
                            CarId = 87,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 4
                        },
                        new
                        {
                            Id = 88,
                            CarId = 88,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 4
                        },
                        new
                        {
                            Id = 89,
                            CarId = 89,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 2
                        },
                        new
                        {
                            Id = 90,
                            CarId = 90,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 3
                        },
                        new
                        {
                            Id = 91,
                            CarId = 91,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 4
                        },
                        new
                        {
                            Id = 92,
                            CarId = 92,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 3
                        },
                        new
                        {
                            Id = 93,
                            CarId = 93,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 3
                        },
                        new
                        {
                            Id = 94,
                            CarId = 94,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 2
                        },
                        new
                        {
                            Id = 95,
                            CarId = 95,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 4
                        },
                        new
                        {
                            Id = 96,
                            CarId = 96,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 3
                        },
                        new
                        {
                            Id = 97,
                            CarId = 97,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 1
                        },
                        new
                        {
                            Id = 98,
                            CarId = 98,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 4
                        },
                        new
                        {
                            Id = 99,
                            CarId = 99,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 4
                        },
                        new
                        {
                            Id = 100,
                            CarId = 100,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 4
                        },
                        new
                        {
                            Id = 101,
                            CarId = 101,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 3
                        },
                        new
                        {
                            Id = 102,
                            CarId = 102,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 4
                        },
                        new
                        {
                            Id = 103,
                            CarId = 103,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 1
                        },
                        new
                        {
                            Id = 104,
                            CarId = 104,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 2
                        },
                        new
                        {
                            Id = 105,
                            CarId = 105,
                            FromDate = new DateTime(2025, 4, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 3
                        });
                });

            modelBuilder.Entity("TeslaGoAPI.DB.Entities.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("City");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CountryId = 1,
                            IsDeleted = false,
                            Name = "Palma"
                        },
                        new
                        {
                            Id = 2,
                            CountryId = 1,
                            IsDeleted = false,
                            Name = "Alcudia"
                        },
                        new
                        {
                            Id = 3,
                            CountryId = 1,
                            IsDeleted = false,
                            Name = "Manacor"
                        },
                        new
                        {
                            Id = 4,
                            CountryId = 1,
                            IsDeleted = false,
                            Name = "Inca"
                        },
                        new
                        {
                            Id = 5,
                            CountryId = 1,
                            IsDeleted = false,
                            Name = "Santanyí"
                        },
                        new
                        {
                            Id = 6,
                            CountryId = 1,
                            IsDeleted = false,
                            Name = "Sóller"
                        },
                        new
                        {
                            Id = 7,
                            CountryId = 1,
                            IsDeleted = false,
                            Name = "Magaluf"
                        },
                        new
                        {
                            Id = 8,
                            CountryId = 1,
                            IsDeleted = false,
                            Name = "Porto Cristo"
                        },
                        new
                        {
                            Id = 9,
                            CountryId = 1,
                            IsDeleted = false,
                            Name = "Campos"
                        },
                        new
                        {
                            Id = 10,
                            CountryId = 1,
                            IsDeleted = false,
                            Name = "Marratxí"
                        },
                        new
                        {
                            Id = 11,
                            CountryId = 2,
                            IsDeleted = false,
                            Name = "Warsaw"
                        },
                        new
                        {
                            Id = 12,
                            CountryId = 2,
                            IsDeleted = false,
                            Name = "Kraków"
                        },
                        new
                        {
                            Id = 13,
                            CountryId = 1,
                            IsDeleted = false,
                            Name = "Madrid"
                        },
                        new
                        {
                            Id = 14,
                            CountryId = 1,
                            IsDeleted = false,
                            Name = "Barcelona"
                        },
                        new
                        {
                            Id = 15,
                            CountryId = 3,
                            IsDeleted = false,
                            Name = "Berlin"
                        },
                        new
                        {
                            Id = 16,
                            CountryId = 3,
                            IsDeleted = false,
                            Name = "Munich"
                        },
                        new
                        {
                            Id = 17,
                            CountryId = 4,
                            IsDeleted = false,
                            Name = "Paris"
                        },
                        new
                        {
                            Id = 18,
                            CountryId = 1,
                            IsDeleted = false,
                            Name = "Lyon"
                        },
                        new
                        {
                            Id = 19,
                            CountryId = 5,
                            IsDeleted = false,
                            Name = "Rome"
                        },
                        new
                        {
                            Id = 20,
                            CountryId = 5,
                            IsDeleted = false,
                            Name = "Milan"
                        });
                });

            modelBuilder.Entity("TeslaGoAPI.DB.Entities.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.HasKey("Id");

                    b.ToTable("Country");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsDeleted = false,
                            Name = "Spain"
                        },
                        new
                        {
                            Id = 2,
                            IsDeleted = false,
                            Name = "Poland"
                        },
                        new
                        {
                            Id = 3,
                            IsDeleted = false,
                            Name = "Germany"
                        },
                        new
                        {
                            Id = 4,
                            IsDeleted = false,
                            Name = "France"
                        },
                        new
                        {
                            Id = 5,
                            IsDeleted = false,
                            Name = "Italy"
                        });
                });

            modelBuilder.Entity("TeslaGoAPI.DB.Entities.DriveType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.HasKey("Id");

                    b.ToTable("DriveType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Rear-Wheel Drive",
                            IsDeleted = false,
                            Name = "RWD"
                        },
                        new
                        {
                            Id = 2,
                            Description = "All-Wheel Drive",
                            IsDeleted = false,
                            Name = "AWD"
                        });
                });

            modelBuilder.Entity("TeslaGoAPI.DB.Entities.Equipment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("Equipment");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Advanced driver assistance system with automatic lane-keeping, adaptive cruise control, and more.",
                            Name = "Autopilot"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Includes Autopilot features plus Navigate on Autopilot, Auto Park, Summon, and more.",
                            Name = "Full Self-Driving (FSD) Package"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Upgraded interior with premium audio, ambient lighting, and more luxurious finishes.",
                            Name = "Premium Interior"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Heated front and rear seats for added comfort during cold weather.",
                            Name = "Heated Seats"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Panoramic glass roof providing an open, airy feel and UV protection.",
                            Name = "Glass Roof"
                        },
                        new
                        {
                            Id = 6,
                            Description = "Access to Tesla's Supercharger network for fast charging.",
                            Name = "Supercharging"
                        },
                        new
                        {
                            Id = 7,
                            Description = "Access to premium features such as satellite maps, live traffic visualizations, and more.",
                            Name = "Premium Connectivity"
                        },
                        new
                        {
                            Id = 8,
                            Description = "Includes a tow hitch and towing accessories for hauling trailers or other gear.",
                            Name = "Towing Package"
                        },
                        new
                        {
                            Id = 9,
                            Description = "Basic 19-inch wheels",
                            Name = "19\" Wheels"
                        },
                        new
                        {
                            Id = 10,
                            Description = "Larger 20-inch wheels for better performance and appearance.",
                            Name = "20\" Wheels"
                        },
                        new
                        {
                            Id = 11,
                            Description = "Sportier 20-inch wheels for enhanced performance and aesthetics.",
                            Name = "20\" Sport Wheels"
                        },
                        new
                        {
                            Id = 12,
                            Description = "Upgraded audio system with premium sound quality.",
                            Name = "Enhanced Audio System"
                        },
                        new
                        {
                            Id = 13,
                            Description = "Ability to remotely summon your Tesla to you using the Tesla app.",
                            Name = "Smart Summon"
                        });
                });

            modelBuilder.Entity("TeslaGoAPI.DB.Entities.FuelType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.HasKey("Id");

                    b.ToTable("FuelType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsDeleted = false,
                            Name = "Electric"
                        });
                });

            modelBuilder.Entity("TeslaGoAPI.DB.Entities.GearBox", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<byte?>("NumberOfGears")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.ToTable("GearBox");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsDeleted = false,
                            Name = "Single-Speed",
                            NumberOfGears = (byte)1
                        });
                });

            modelBuilder.Entity("TeslaGoAPI.DB.Entities.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AddressId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.HasIndex("AddressId")
                        .IsUnique();

                    b.ToTable("Location");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AddressId = 1,
                            IsDeleted = false,
                            Name = "Palma Airport"
                        },
                        new
                        {
                            Id = 2,
                            AddressId = 2,
                            IsDeleted = false,
                            Name = "Palma City Center"
                        },
                        new
                        {
                            Id = 3,
                            AddressId = 3,
                            IsDeleted = false,
                            Name = "Alcudia"
                        },
                        new
                        {
                            Id = 4,
                            AddressId = 4,
                            IsDeleted = false,
                            Name = "Manacor"
                        });
                });

            modelBuilder.Entity("TeslaGoAPI.DB.Entities.ModelVersion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.HasKey("Id");

                    b.ToTable("ModelVersion");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Standard range, standard performance",
                            IsDeleted = false,
                            Name = "Standard"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Longer range, standard performance",
                            IsDeleted = false,
                            Name = "Long Range"
                        },
                        new
                        {
                            Id = 3,
                            Description = "High-performance version with quicker acceleration",
                            IsDeleted = false,
                            Name = "Performance"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Top performance with three motors and extreme acceleration",
                            IsDeleted = false,
                            Name = "Plaid"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Tri-motor performance with extreme acceleration and off-road prowess.",
                            IsDeleted = false,
                            Name = "Cyber-beast"
                        });
                });

            modelBuilder.Entity("TeslaGoAPI.DB.Entities.OptService", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(7,2)");

                    b.HasKey("Id");

                    b.ToTable("OptService", t =>
                        {
                            t.HasCheckConstraint("CK_OptService_Price", "[Price] BETWEEN 0 AND 50000");
                        });

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Comprehensive insurance coverage including damage, theft, and third-party liability.",
                            IsDeleted = false,
                            Name = "Full Insurance",
                            Price = 250.00m
                        },
                        new
                        {
                            Id = 3,
                            Description = "Safe and comfortable child car seat suitable for different age groups.",
                            IsDeleted = false,
                            Name = "Child Car Seat",
                            Price = 50.00m
                        },
                        new
                        {
                            Id = 4,
                            Description = "24/7 roadside assistance in case of emergencies like breakdowns or accidents.",
                            IsDeleted = false,
                            Name = "Roadside Assistance",
                            Price = 199.00m
                        },
                        new
                        {
                            Id = 5,
                            Description = "Add an additional driver to the rental for no extra charge for the duration of the rental period.",
                            IsDeleted = false,
                            Name = "Extra Driver",
                            Price = 25.00m
                        });
                });

            modelBuilder.Entity("TeslaGoAPI.DB.Entities.Paint", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ColorHex")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("nvarchar(7)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Paint", t =>
                        {
                            t.HasCheckConstraint("CK_Paint_ColorHex", "LEN([ColorHex]) BETWEEN 7 AND 7");
                        });

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ColorHex = "#ffffff",
                            IsDeleted = false,
                            Name = "Pearl White"
                        },
                        new
                        {
                            Id = 2,
                            ColorHex = "#000000",
                            IsDeleted = false,
                            Name = "Solid Black"
                        },
                        new
                        {
                            Id = 3,
                            ColorHex = "#235598",
                            IsDeleted = false,
                            Name = "Deep Blue Metallic"
                        },
                        new
                        {
                            Id = 4,
                            ColorHex = "#212127",
                            IsDeleted = false,
                            Name = "Stealth Grey"
                        },
                        new
                        {
                            Id = 5,
                            ColorHex = "#87858e",
                            IsDeleted = false,
                            Name = "QuickSilver"
                        },
                        new
                        {
                            Id = 6,
                            ColorHex = "#b6151f",
                            IsDeleted = false,
                            Name = "Ultra Red"
                        },
                        new
                        {
                            Id = 7,
                            ColorHex = "#740415",
                            IsDeleted = false,
                            Name = "Midnight Cherry Red"
                        });
                });

            modelBuilder.Entity("TeslaGoAPI.DB.Entities.PaymentMethod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("Id");

                    b.ToTable("PaymentMethod");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsDeleted = false,
                            Name = "Credit Card"
                        },
                        new
                        {
                            Id = 2,
                            IsDeleted = false,
                            Name = "Bank Transfer"
                        },
                        new
                        {
                            Id = 3,
                            IsDeleted = false,
                            Name = "PayPal"
                        },
                        new
                        {
                            Id = 4,
                            IsDeleted = false,
                            Name = "Apple Pay"
                        },
                        new
                        {
                            Id = 5,
                            IsDeleted = false,
                            Name = "Google Pay"
                        },
                        new
                        {
                            Id = 6,
                            IsDeleted = false,
                            Name = "Cash on Delivery"
                        });
                });

            modelBuilder.Entity("TeslaGoAPI.DB.Entities.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CarId")
                        .HasColumnType("int");

                    b.Property<int>("CarModelId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUpdated")
                        .HasColumnType("bit");

                    b.Property<int>("PaymentMethodId")
                        .HasColumnType("int");

                    b.Property<int>("PickupLocationId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReservationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ReturnLocationId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TotalCost")
                        .HasColumnType("decimal(9,2)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CarId");

                    b.HasIndex("CarModelId");

                    b.HasIndex("PaymentMethodId");

                    b.HasIndex("PickupLocationId");

                    b.HasIndex("ReturnLocationId");

                    b.HasIndex("UserId");

                    b.ToTable("Reservation", t =>
                        {
                            t.HasCheckConstraint("CK_Reservation_TotalCost", "[TotalCost] BETWEEN 0 AND 1000000");
                        });
                });

            modelBuilder.Entity("TeslaGoAPI.DB.Entities.Reservation_OptService", b =>
                {
                    b.Property<int>("OptServiceId")
                        .HasColumnType("int");

                    b.Property<int>("ReservationId")
                        .HasColumnType("int");

                    b.HasKey("OptServiceId", "ReservationId");

                    b.HasIndex("ReservationId");

                    b.ToTable("Reservation_OptService");
                });

            modelBuilder.Entity("TeslaGoAPI.DB.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Admin role",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = 2,
                            Description = "User role",
                            Name = "User",
                            NormalizedName = "USER"
                        });
                });

            modelBuilder.Entity("TeslaGoAPI.DB.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<int?>("AddressId")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("DrivingLicenseNumber")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<DateTime>("RegisteredDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("AddressId")
                        .IsUnique()
                        .HasFilter("[AddressId] IS NOT NULL");

                    b.HasIndex("DrivingLicenseNumber")
                        .IsUnique()
                        .HasFilter("[DrivingLicenseNumber] IS NOT NULL");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccessFailedCount = 0,
                            AddressId = 1,
                            ConcurrencyStamp = "37dfae4c-bb56-41e0-81a1-20a09eb89a65",
                            DateOfBirth = new DateTime(2000, 4, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DrivingLicenseNumber = "UU7OD8NAXC",
                            Email = "admin@gmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            Name = "Admin",
                            NormalizedEmail = "ADMIN@GMAIL.COM",
                            NormalizedUserName = "ADMIN@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEGEMYoNWV9ZPZbmvUC7bIR9ZoFmrtLksCK1C5/Zv5zeZKOQ5ZdGQIfIetYntVtwvsw==",
                            PhoneNumberConfirmed = false,
                            RegisteredDate = new DateTime(2025, 1, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Surname = "Admin",
                            TwoFactorEnabled = false,
                            UserName = "admin@gmail.com"
                        },
                        new
                        {
                            Id = 2,
                            AccessFailedCount = 0,
                            AddressId = 12,
                            ConcurrencyStamp = " 9f0a42ad-8b69-4b33-b42e-87d16f84bfe5",
                            DateOfBirth = new DateTime(1985, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DrivingLicenseNumber = "4WVG9U3XB2",
                            Email = "jan.kowalski@gmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            Name = "Jan",
                            NormalizedEmail = "JAN.KOWALSKI@GMAIL.COM",
                            NormalizedUserName = "JAN.KOWALSKI@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEOxfEj/QgbFYuT8NjbpqyOCZquEHFa2tZWhTad2pbvEHpffKzMnJSUHOc6cjr9jh+g==",
                            PhoneNumberConfirmed = false,
                            RegisteredDate = new DateTime(2025, 2, 23, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Surname = "Kowalski",
                            TwoFactorEnabled = false,
                            UserName = "jan.kowalski@gmail.com"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("TeslaGoAPI.DB.Entities.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("TeslaGoAPI.DB.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("TeslaGoAPI.DB.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("TeslaGoAPI.DB.Entities.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TeslaGoAPI.DB.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("TeslaGoAPI.DB.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TeslaGoAPI.DB.Entities.Address", b =>
                {
                    b.HasOne("TeslaGoAPI.DB.Entities.City", "City")
                        .WithMany("Addresses")
                        .HasForeignKey("CityId");

                    b.Navigation("City");
                });

            modelBuilder.Entity("TeslaGoAPI.DB.Entities.Car", b =>
                {
                    b.HasOne("TeslaGoAPI.DB.Entities.CarModel", "Model")
                        .WithMany("Cars")
                        .HasForeignKey("ModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TeslaGoAPI.DB.Entities.Paint", "Paint")
                        .WithMany("Cars")
                        .HasForeignKey("PaintId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Model");

                    b.Navigation("Paint");
                });

            modelBuilder.Entity("TeslaGoAPI.DB.Entities.CarAvailabilityIssue", b =>
                {
                    b.HasOne("TeslaGoAPI.DB.Entities.CarModel", "CarModel")
                        .WithMany("CarAvailabilityIssues")
                        .HasForeignKey("CarModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TeslaGoAPI.DB.Entities.Location", "Location")
                        .WithMany("CarAvailabilityIssues")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TeslaGoAPI.DB.Entities.Reservation", "Reservation")
                        .WithMany("CarAvailabilityIssues")
                        .HasForeignKey("ReservationId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CarModel");

                    b.Navigation("Location");

                    b.Navigation("Reservation");
                });

            modelBuilder.Entity("TeslaGoAPI.DB.Entities.CarModel", b =>
                {
                    b.HasOne("TeslaGoAPI.DB.Entities.BodyType", "BodyType")
                        .WithMany("CarModels")
                        .HasForeignKey("BodyTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TeslaGoAPI.DB.Entities.Brand", "Brand")
                        .WithMany("CarModels")
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TeslaGoAPI.DB.Entities.CarModel", null)
                        .WithMany("Reservations")
                        .HasForeignKey("CarModelId");

                    b.HasOne("TeslaGoAPI.DB.Entities.DriveType", "DriveType")
                        .WithMany("CarModels")
                        .HasForeignKey("DriveTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TeslaGoAPI.DB.Entities.FuelType", "FuelType")
                        .WithMany("CarModels")
                        .HasForeignKey("FuelTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TeslaGoAPI.DB.Entities.GearBox", "GearBox")
                        .WithMany("CarModels")
                        .HasForeignKey("GearBoxId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TeslaGoAPI.DB.Entities.ModelVersion", "ModelVersion")
                        .WithMany("CarModels")
                        .HasForeignKey("ModelVersionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BodyType");

                    b.Navigation("Brand");

                    b.Navigation("DriveType");

                    b.Navigation("FuelType");

                    b.Navigation("GearBox");

                    b.Navigation("ModelVersion");
                });

            modelBuilder.Entity("TeslaGoAPI.DB.Entities.CarModelDetails", b =>
                {
                    b.HasOne("TeslaGoAPI.DB.Entities.CarModel", "CarModel")
                        .WithOne("CarModelDetails")
                        .HasForeignKey("TeslaGoAPI.DB.Entities.CarModelDetails", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CarModel");
                });

            modelBuilder.Entity("TeslaGoAPI.DB.Entities.CarModel_Equipment", b =>
                {
                    b.HasOne("TeslaGoAPI.DB.Entities.CarModel", null)
                        .WithMany()
                        .HasForeignKey("CarModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TeslaGoAPI.DB.Entities.Equipment", null)
                        .WithMany()
                        .HasForeignKey("EquipmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TeslaGoAPI.DB.Entities.Car_Location", b =>
                {
                    b.HasOne("TeslaGoAPI.DB.Entities.Car", "Car")
                        .WithMany("Locations")
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TeslaGoAPI.DB.Entities.Location", "Location")
                        .WithMany("Cars")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Car");

                    b.Navigation("Location");
                });

            modelBuilder.Entity("TeslaGoAPI.DB.Entities.City", b =>
                {
                    b.HasOne("TeslaGoAPI.DB.Entities.Country", "Country")
                        .WithMany("Cities")
                        .HasForeignKey("CountryId");

                    b.Navigation("Country");
                });

            modelBuilder.Entity("TeslaGoAPI.DB.Entities.Location", b =>
                {
                    b.HasOne("TeslaGoAPI.DB.Entities.Address", "Address")
                        .WithOne("Location")
                        .HasForeignKey("TeslaGoAPI.DB.Entities.Location", "AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");
                });

            modelBuilder.Entity("TeslaGoAPI.DB.Entities.Reservation", b =>
                {
                    b.HasOne("TeslaGoAPI.DB.Entities.Car", "Car")
                        .WithMany("Reservations")
                        .HasForeignKey("CarId");

                    b.HasOne("TeslaGoAPI.DB.Entities.CarModel", "CarModel")
                        .WithMany()
                        .HasForeignKey("CarModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TeslaGoAPI.DB.Entities.PaymentMethod", "PaymentMethod")
                        .WithMany("Reservations")
                        .HasForeignKey("PaymentMethodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TeslaGoAPI.DB.Entities.Location", "PickupLocation")
                        .WithMany("PickupReservations")
                        .HasForeignKey("PickupLocationId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TeslaGoAPI.DB.Entities.Location", "ReturnLocation")
                        .WithMany("ReturnReservations")
                        .HasForeignKey("ReturnLocationId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TeslaGoAPI.DB.Entities.User", "User")
                        .WithMany("Reservations")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Car");

                    b.Navigation("CarModel");

                    b.Navigation("PaymentMethod");

                    b.Navigation("PickupLocation");

                    b.Navigation("ReturnLocation");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TeslaGoAPI.DB.Entities.Reservation_OptService", b =>
                {
                    b.HasOne("TeslaGoAPI.DB.Entities.OptService", null)
                        .WithMany()
                        .HasForeignKey("OptServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TeslaGoAPI.DB.Entities.Reservation", null)
                        .WithMany()
                        .HasForeignKey("ReservationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TeslaGoAPI.DB.Entities.User", b =>
                {
                    b.HasOne("TeslaGoAPI.DB.Entities.Address", "Address")
                        .WithOne("User")
                        .HasForeignKey("TeslaGoAPI.DB.Entities.User", "AddressId");

                    b.Navigation("Address");
                });

            modelBuilder.Entity("TeslaGoAPI.DB.Entities.Address", b =>
                {
                    b.Navigation("Location");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TeslaGoAPI.DB.Entities.BodyType", b =>
                {
                    b.Navigation("CarModels");
                });

            modelBuilder.Entity("TeslaGoAPI.DB.Entities.Brand", b =>
                {
                    b.Navigation("CarModels");
                });

            modelBuilder.Entity("TeslaGoAPI.DB.Entities.Car", b =>
                {
                    b.Navigation("Locations");

                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("TeslaGoAPI.DB.Entities.CarModel", b =>
                {
                    b.Navigation("CarAvailabilityIssues");

                    b.Navigation("CarModelDetails")
                        .IsRequired();

                    b.Navigation("Cars");

                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("TeslaGoAPI.DB.Entities.City", b =>
                {
                    b.Navigation("Addresses");
                });

            modelBuilder.Entity("TeslaGoAPI.DB.Entities.Country", b =>
                {
                    b.Navigation("Cities");
                });

            modelBuilder.Entity("TeslaGoAPI.DB.Entities.DriveType", b =>
                {
                    b.Navigation("CarModels");
                });

            modelBuilder.Entity("TeslaGoAPI.DB.Entities.FuelType", b =>
                {
                    b.Navigation("CarModels");
                });

            modelBuilder.Entity("TeslaGoAPI.DB.Entities.GearBox", b =>
                {
                    b.Navigation("CarModels");
                });

            modelBuilder.Entity("TeslaGoAPI.DB.Entities.Location", b =>
                {
                    b.Navigation("CarAvailabilityIssues");

                    b.Navigation("Cars");

                    b.Navigation("PickupReservations");

                    b.Navigation("ReturnReservations");
                });

            modelBuilder.Entity("TeslaGoAPI.DB.Entities.ModelVersion", b =>
                {
                    b.Navigation("CarModels");
                });

            modelBuilder.Entity("TeslaGoAPI.DB.Entities.Paint", b =>
                {
                    b.Navigation("Cars");
                });

            modelBuilder.Entity("TeslaGoAPI.DB.Entities.PaymentMethod", b =>
                {
                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("TeslaGoAPI.DB.Entities.Reservation", b =>
                {
                    b.Navigation("CarAvailabilityIssues");
                });

            modelBuilder.Entity("TeslaGoAPI.DB.Entities.User", b =>
                {
                    b.Navigation("Reservations");
                });
#pragma warning restore 612, 618
        }
    }
}
